import { getCurrentInstance as He, computed as m, defineComponent as ae, defineAsyncComponent as q, ref as B, onMounted as ge, useSlots as We, openBlock as V, createElementBlock as L, normalizeClass as N, normalizeStyle as te, createElementVNode as j, createCommentVNode as g, renderSlot as R, createBlock as O, unref as P, resolveDynamicComponent as Se, withDirectives as Pe, mergeProps as re, toHandlers as Qe, vModelDynamic as Ge, createTextVNode as ve, toDisplayString as X, withModifiers as oe, withCtx as H, createVNode as Z, useCssVars as Je, onBeforeMount as Ze, nextTick as ne, Transition as Xe, Fragment as Ie, renderList as xe, inject as _e, mergeModels as ke, useModel as eo, provide as oo, watch as fe } from "vue";
import { getCountries as Ae, getCountryCallingCode as ue, isSupportedCountry as to, parsePhoneNumberFromString as lo, AsYouType as no, getExampleNumber as ao } from "libphonenumber-js";
import '../assets/MazPhoneNumberInput.css';function be({
  componentName: n,
  providedId: l
}) {
  const e = He();
  return m(() => l ?? `${n}-${e == null ? void 0 : e.uid}`);
}
let pe = null;
function ro(n, l) {
  pe && clearTimeout(pe), pe = setTimeout(n, l);
}
const so = {
  removeAccents: !0,
  caseSensitive: !1,
  replaceSpaces: !0,
  removeSpecialCharacters: !1,
  trim: !0,
  normalizeSpaces: !0,
  removeNumbers: !1,
  customNormalizationForms: ["NFC", "NFKD"]
};
function ie(n, l) {
  const e = { ...so, ...l }, t = {
    À: "A",
    Á: "A",
    Â: "A",
    Ã: "A",
    Ä: "A",
    Å: "A",
    à: "a",
    á: "a",
    â: "a",
    ã: "a",
    ä: "a",
    å: "a",
    È: "E",
    É: "E",
    Ê: "E",
    Ë: "E",
    è: "e",
    é: "e",
    ê: "e",
    ë: "e",
    Î: "I",
    Ï: "I",
    í: "I",
    î: "i",
    ï: "i",
    Ô: "O",
    Õ: "O",
    Ö: "O",
    Ø: "O",
    ô: "o",
    õ: "o",
    ö: "o",
    ø: "o",
    Ù: "U",
    Ú: "U",
    Û: "U",
    Ü: "U",
    ù: "u",
    ú: "u",
    û: "u",
    ü: "u",
    Ç: "C",
    ç: "c",
    ÿ: "y",
    Ñ: "N",
    ñ: "n",
    ó: "o"
  };
  let d = n.toString();
  if (e.trim && (d = d.trim()), e.normalizeSpaces && (d = d.replaceAll(/\s+/g, " ")), e.replaceSpaces && (d = d.replaceAll(" ", "-")), e.removeNumbers && (d = d.replaceAll(/\d/g, "")), e.removeAccents && (d = d.replaceAll(/[ÀÁÂÃÄÅÇÈÉÊËÎÏÑÔÕÖØÙÚÛÜàáâãäåçèéêëíîïñóôõöøùúûüÿ]/g, (f) => t[f] || f), d = d.replaceAll(/[\u0300-\u036F]/g, "")), e.caseSensitive === !1 && (d = d.toLowerCase()), e.removeSpecialCharacters && (d = d.replaceAll(/[^\dA-Z-]/gi, "")), e.trim && (d = d.trim()), e.customNormalizationForms)
    for (const f of e.customNormalizationForms)
      d = d.normalize(f);
  return d;
}
function uo(n, l) {
  const e = n.length, t = l.length, d = [];
  for (let f = 0; f <= e; f++)
    d[f] = [f];
  for (let f = 0; f <= t; f++)
    d[0][f] = f;
  for (let f = 1; f <= e; f++)
    for (let b = 1; b <= t; b++) {
      const k = n[f - 1] === l[b - 1] ? 0 : 1;
      d[f][b] = Math.min(
        d[f - 1][b] + 1,
        d[f][b - 1] + 1,
        d[f - 1][b - 1] + k
      );
    }
  return d[e][t];
}
function Fe(n, l) {
  const e = uo(n, l), t = Math.max(n.length, l.length);
  return 1 - e / t;
}
function io(n, l, e = 0.75) {
  return Fe(n, l) >= e;
}
function me(n, l, e = 0.75) {
  const t = m(
    () => ie(typeof n == "string" ? n : n.value)
  ), d = m(
    () => ie(typeof l == "string" ? l : l.value)
  ), f = m(() => typeof e == "number" ? e : e.value), b = m(() => Fe(t.value, d.value));
  return {
    isMatching: m(
      () => io(t.value, d.value, f.value)
    ),
    score: b
  };
}
function Ee(n, l, e) {
  var b;
  n.stopPropagation();
  const t = typeof e.value == "function" ? e.value : e.value.handler, d = typeof e.value == "object" ? e.value.exclude : void 0;
  let f = !1;
  if (d && d.length > 0) {
    for (const k of d)
      if (!f && n.target instanceof HTMLElement) {
        const K = (b = document.querySelector(k)) == null ? void 0 : b.getAttribute("id");
        f = n.target.getAttribute("id") === K;
      }
  }
  !l.contains(n.target) && !f && (t == null || t());
}
function Le() {
  return document.ontouchstart === null ? "touchstart" : "click";
}
function co(n, l) {
  const e = Le();
  document.removeEventListener(e, (t) => Ee(t, n, l));
}
function fo(n, l) {
  if (typeof l.value != "function" && typeof l.value == "object" && typeof l.value.handler != "function") {
    console.error("[maz-ui](vClosable) v-closable directive requires a handler function");
    return;
  }
  const e = Le();
  document.addEventListener(e, (t) => Ee(t, n, l));
}
const po = {
  mounted: fo,
  unmounted: co
}, se = (n, l) => {
  const e = n.__vccOpts || n;
  for (const [t, d] of l)
    e[t] = d;
  return e;
};
function mo(n, l) {
  let e;
  return function(...t) {
    clearTimeout(e), e = setTimeout(() => {
      n.apply(this, t);
    }, l);
  };
}
const yo = {
  key: 0,
  class: "m-input-wrapper-left"
}, vo = { class: "m-input-wrapper-input" }, ho = ["id", "type", "name", "inputmode", "placeholder", "aria-label", "disabled", "readonly", "required"], go = { key: 0 }, bo = {
  key: 1,
  class: "m-input-wrapper-right"
}, zo = /* @__PURE__ */ ae({
  inheritAttrs: !1,
  __name: "MazInput",
  props: {
    style: { default: void 0 },
    class: { default: void 0 },
    modelValue: { default: void 0 },
    placeholder: { default: void 0 },
    label: { default: void 0 },
    name: { default: void 0 },
    color: { default: "primary" },
    type: { default: "text" },
    required: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    id: { default: void 0 },
    error: { type: Boolean, default: !1 },
    success: { type: Boolean, default: !1 },
    warning: { type: Boolean, default: !1 },
    hint: { default: void 0 },
    inputClasses: { default: void 0 },
    noBorder: { type: Boolean, default: !1 },
    noRadius: { type: Boolean, default: !1 },
    inputmode: { default: "text" },
    size: { default: "md" },
    debounce: { type: [Boolean, Number], default: !1 },
    debounceDelay: { default: 500 },
    validButton: { type: Boolean, default: !1 },
    validButtonLoading: { type: Boolean, default: !1 },
    autoFocus: { type: Boolean, default: !1 },
    borderActive: { type: Boolean, default: !1 },
    leftIcon: { type: [String, Function, Object], default: void 0 },
    rightIcon: { type: [String, Function, Object], default: void 0 },
    roundedSize: { default: void 0 },
    block: { type: Boolean }
  },
  emits: ["update:model-value", "focus", "blur", "click", "change"],
  setup(n, { emit: l }) {
    const e = n, t = l, d = q(() => import("./MazBtn-gE-drZkE.mjs")), f = q(() => import("./MazIcon-CUOwXGOK.mjs")), b = q(() => import("./eye-slash-tjfxO0LK.mjs")), k = q(() => import("./eye-DqO_Jx56.mjs")), K = q(() => import("./check-7UA4j2f2.mjs")), A = B(!1), y = B(!1), S = B(), s = be({
      componentName: "MazInput",
      providedId: e.id
    });
    ge(() => {
      var r;
      e.autoFocus && ((r = S.value) == null || r.focus());
    });
    const p = m(() => e.type === "password"), w = m(() => A.value ? "text" : e.type), I = m(() => {
      if (!e.noBorder) {
        if (e.error)
          return "maz-border-danger";
        if (e.success)
          return "maz-border-success";
        if (e.warning)
          return "maz-border-warning";
        if (y.value || e.borderActive) {
          if (e.color === "black")
            return "maz-border-black";
          if (e.color === "danger")
            return "maz-border-danger";
          if (e.color === "info")
            return "maz-border-info";
          if (e.color === "primary")
            return "maz-border-primary";
          if (e.color === "secondary")
            return "maz-border-secondary";
          if (e.color === "success")
            return "maz-border-success";
          if (e.color === "warning")
            return "maz-border-warning";
          if (e.color === "white")
            return "maz-border-white";
        }
        return "--default-border";
      }
    }), D = We(), W = m(() => {
      const { required: r, placeholder: F } = e;
      if (F)
        return r ? `${F} *` : F;
    }), Q = m(() => h.value !== void 0 && h.value !== ""), v = mo(
      (r) => {
        t("update:model-value", r);
      },
      typeof e.debounce == "number" ? e.debounce : e.debounceDelay ?? 500
    );
    function z(r) {
      if (e.debounce)
        return v(r);
      t("update:model-value", r);
    }
    const h = m({
      get: () => e.modelValue,
      set: (r) => z(r)
    }), G = m(() => (!!e.label || !!e.hint) && (y.value || !!Q.value || !!e.placeholder || ["date", "month", "week"].includes(e.type))), a = m(() => !!e.label || !!e.hint);
    function $() {
      return !!D["right-icon"] || p.value || !!D["valid-button"] || e.validButton || !!e.rightIcon;
    }
    function E() {
      return !!D["left-icon"] || !!e.leftIcon;
    }
    function M(r) {
      t("focus", r), y.value = !0;
    }
    function U(r) {
      t("blur", r), y.value = !1;
    }
    function le(r) {
      return t("change", r);
    }
    return (r, F) => (V(), L(
      "div",
      {
        class: N(["m-input", [
          {
            "--is-focused": y.value || r.borderActive,
            "--should-up": G.value,
            "--has-label": a.value,
            "--is-disabled": r.disabled,
            "--is-readonly": r.readonly,
            "--has-z-2": r.error || r.warning || r.success,
            "--has-state": r.error || r.warning || r.success,
            "--block": r.block
          },
          e.class,
          `--${r.color}`,
          `--${r.size}`
        ]]),
        style: te(r.style)
      },
      [
        j(
          "div",
          {
            class: N(["m-input-wrapper", [
              r.inputClasses,
              I.value,
              r.roundedSize ? `--rounded-${r.roundedSize}` : { "maz-rounded": !r.noRadius }
            ]])
          },
          [
            E() ? (V(), L("div", yo, [
              g(`
          @slot left-icon - The icon to display on the left of the input
        `),
              r.$slots["left-icon"] || r.leftIcon ? R(r.$slots, "left-icon", { key: 0 }, () => [
                typeof r.leftIcon == "string" ? (V(), O(P(f), {
                  key: 0,
                  name: r.leftIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])) : r.leftIcon ? (V(), O(Se(r.leftIcon), {
                  key: 1,
                  class: "maz-text-xl maz-text-muted"
                })) : g("v-if", !0)
              ], !0) : g("v-if", !0)
            ])) : g("v-if", !0),
            j("div", vo, [
              Pe(j("input", re({
                id: P(s),
                ref_key: "input",
                ref: S,
                "onUpdate:modelValue": F[0] || (F[0] = (J) => h.value = J),
                type: w.value,
                name: r.name
              }, r.$attrs, {
                inputmode: r.inputmode,
                placeholder: W.value,
                "aria-label": r.label || r.placeholder,
                disabled: r.disabled,
                readonly: r.readonly,
                required: r.required,
                class: "m-input-input"
              }, Qe({
                blur: U,
                focus: M,
                change: le
              }, !0), {
                onClick: F[1] || (F[1] = (J) => r.$emit("click", J))
              }), null, 16, ho), [
                [Ge, h.value]
              ]),
              r.label || r.hint ? (V(), L(
                "span",
                {
                  key: 0,
                  class: N(["m-input-label", [
                    {
                      "maz-text-danger-600": r.error,
                      "maz-text-success-600": r.success,
                      "maz-text-warning-600": r.warning
                    }
                  ]])
                },
                [
                  ve(
                    X(r.hint || r.label) + " ",
                    1
                    /* TEXT */
                  ),
                  r.required ? (V(), L("sup", go, "*")) : g("v-if", !0)
                ],
                2
                /* CLASS */
              )) : g("v-if", !0)
            ]),
            $() ? (V(), L("div", bo, [
              g(`
          @slot right-icon - The icon to display on the right of the input
        `),
              r.$slots["right-icon"] || r.rightIcon ? R(r.$slots, "right-icon", { key: 0 }, () => [
                typeof r.rightIcon == "string" ? (V(), O(P(f), {
                  key: 0,
                  name: r.rightIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])) : r.rightIcon ? (V(), O(Se(r.rightIcon), {
                  key: 1,
                  class: "maz-text-xl maz-text-muted"
                })) : g("v-if", !0)
              ], !0) : g("v-if", !0),
              p.value ? (V(), O(P(d), {
                key: 1,
                color: "transparent",
                tabindex: "-1",
                size: "mini",
                onClick: F[2] || (F[2] = oe((J) => A.value = !A.value, ["stop"]))
              }, {
                default: H(() => [
                  A.value ? (V(), O(P(b), {
                    key: 0,
                    class: "maz-text-xl maz-text-muted"
                  })) : (V(), O(P(k), {
                    key: 1,
                    class: "maz-text-xl maz-text-muted"
                  }))
                ]),
                _: 1
                /* STABLE */
              })) : g("v-if", !0),
              g(`
          @slot valid-button - Replace the valid button by your own
        `),
              r.$slots["valid-button"] || r.validButton ? R(r.$slots, "valid-button", { key: 2 }, () => [
                Z(P(d), {
                  color: "transparent",
                  disabled: r.disabled,
                  tabindex: "-1",
                  loading: r.validButtonLoading,
                  class: "m-input-valid-button",
                  size: "mini",
                  type: "submit"
                }, {
                  default: H(() => [
                    Z(P(K), { class: "maz-text-2xl maz-text-normal" })
                  ]),
                  _: 1
                  /* STABLE */
                }, 8, ["disabled", "loading"])
              ], !0) : g("v-if", !0)
            ])) : g("v-if", !0)
          ],
          2
          /* CLASS */
        )
      ],
      6
      /* CLASS, STYLE */
    ));
  }
}), he = /* @__PURE__ */ se(zo, [["__scopeId", "data-v-e9affc48"]]), Co = ["aria-label"], Vo = { class: "m-select-list__no-results" }, wo = {
  key: 2,
  class: "m-select-list__scroll-wrapper",
  tabindex: "-1"
}, So = { class: "m-select-list-optgroup" }, Io = ["onClick"], ko = /* @__PURE__ */ ae({
  inheritAttrs: !1,
  __name: "MazSelect",
  props: {
    style: { default: void 0 },
    class: { default: void 0 },
    id: { default: void 0 },
    modelValue: { default: void 0 },
    options: { default: void 0 },
    optionValueKey: { default: "value" },
    optionLabelKey: { default: "label" },
    optionInputValueKey: { default: "label" },
    listPosition: { default: "bottom left" },
    itemHeight: { default: void 0 },
    maxListHeight: { default: 240 },
    maxListWidth: { default: void 0 },
    size: { default: "md" },
    color: { default: "primary" },
    search: { type: Boolean },
    searchPlaceholder: { default: "Search in options" },
    open: { type: Boolean },
    multiple: { type: Boolean, default: void 0 },
    required: { type: Boolean },
    disabled: { type: Boolean },
    block: { type: Boolean },
    excludeSelectors: { default: void 0 }
  },
  emits: ["close", "open", "blur", "focus", "change", "update:model-value", "selected-option"],
  setup(n, { expose: l, emit: e }) {
    Je((o) => ({
      "792163ea": w.value,
      e9859fae: s.value,
      "42d9f8d1": p.value
    }));
    const t = n, d = e, f = q(() => import("./MazCheckbox-BK1MX0uq.mjs")), b = q(() => import("./magnifying-glass-DZGg7953.mjs")), k = q(() => import("./chevron-down-CzMH-gFW.mjs")), K = q(() => import("./no-symbol-QAqP9IlR.mjs"));
    l({
      /** Method to open the option list */
      openList: _,
      /** Method to close the option list */
      closeList: x
    });
    const A = B(!1), y = B(), S = m(
      () => ["black", "transparent", "white"].includes(t.color)
    ), s = m(
      () => S.value ? "var(--maz-color-black)" : `var(--maz-color-${t.color}-800)`
    ), p = m(
      () => S.value ? "var(--maz-color-muted)" : `var(--maz-color-${t.color}-100)`
    ), w = m(
      () => S.value ? "var(--maz-color-muted)" : `var(--maz-color-${t.color}-200)`
    ), I = m(() => A.value || t.open), D = be({
      componentName: "MazSelect",
      providedId: t.id
    });
    function W(o) {
      return {
        [t.optionValueKey]: o,
        [t.optionLabelKey]: o,
        [t.optionInputValueKey]: o
      };
    }
    function Q(o) {
      return {
        ...o,
        [t.optionValueKey]: o[t.optionValueKey],
        [t.optionLabelKey]: o[t.optionLabelKey],
        [t.optionInputValueKey]: o[t.optionInputValueKey]
      };
    }
    const v = m(() => {
      var u;
      const o = [];
      if (!((u = t.options) != null && u.length))
        return [];
      for (const c of t.options)
        typeof c == "string" || typeof c == "number" || typeof c == "boolean" ? o.push(W(c)) : typeof c == "object" && "options" in c && Array.isArray(c.options) ? o.push(
          { label: c.label, isOptGroup: !0 },
          ...c.options.map(
            (i) => typeof i == "string" || typeof i == "number" || typeof i == "boolean" ? W(i) : Q(i)
          )
        ) : o.push(Q(c));
      return o;
    }), z = m(
      () => {
        var o;
        return ((o = v.value) == null ? void 0 : o.filter((u) => t.multiple ? Array.isArray(t.modelValue) ? t.modelValue.includes(u[t.optionValueKey]) && !E(u[t.optionValueKey]) : !1 : t.modelValue === u[t.optionValueKey] && !E(u[t.optionValueKey]))) ?? [];
      }
    );
    Ze(() => {
      var o;
      (o = t.options) != null && o.length || console.warn("[maz-ui](MazSelect) you must provide options"), ce();
    });
    const h = B(), G = B(), a = B(), $ = B();
    function E(o) {
      return o == null;
    }
    function M(o) {
      var c;
      return (((c = z.value) == null ? void 0 : c.some(
        (i) => i[t.optionValueKey] === o[t.optionValueKey]
      )) ?? !1) && !E(o[t.optionValueKey]);
    }
    const U = m(() => {
      var u;
      if (t.multiple && t.modelValue && Array.isArray(t.modelValue))
        return t.modelValue.map(
          (c) => {
            var i, C;
            return (C = (i = v.value) == null ? void 0 : i.find((T) => T[t.optionValueKey] === c)) == null ? void 0 : C[t.optionInputValueKey];
          }
        ).join(", ");
      const o = (u = v.value) == null ? void 0 : u.find(
        (c) => c[t.optionValueKey] === t.modelValue
      );
      return E(t.modelValue) || o == null ? void 0 : o[t.optionInputValueKey];
    }), le = m(
      () => t.listPosition.includes("bottom") ? "maz-slide" : "maz-slideinvert"
    ), r = B(""), F = B("");
    function J(o, u) {
      return u && o && ie(o).includes(ie(u));
    }
    function ze(o) {
      var u;
      return o ? (u = v.value) == null ? void 0 : u.filter((c) => {
        const i = c[t.optionLabelKey], C = c[t.optionValueKey], T = c[t.optionInputValueKey];
        return J(i, o) || J(T, o) || J(C, o) || typeof i == "string" && me(i, o, 0.5).isMatching.value || typeof T == "string" && me(T, o, 0.5).isMatching.value || typeof C == "string" && me(C, o, 0.5).isMatching.value;
      }) : v.value;
    }
    const Y = m(() => ze(r.value));
    async function x(o) {
      var c, i;
      if (!I.value)
        return;
      if (o && ("relatedTarget" in o && ((c = h.value) != null && c.contains(o.relatedTarget)) || o.type === "keydown"))
        return o.preventDefault();
      const u = o && "relatedTarget" in o && o.relatedTarget instanceof HTMLElement && o.relatedTarget.getAttribute("id");
      if ((i = t.excludeSelectors) != null && i.includes(`#${u}`))
        return o == null ? void 0 : o.preventDefault();
      await ne(), A.value = !1, y.value = 0, d("close", o);
    }
    async function _(o) {
      t.disabled || I.value || (o == null || o.preventDefault(), A.value = !0, await de(), d("focus", o), d("open", A.value));
    }
    function Ce() {
      var o, u;
      (u = ((o = G.value) == null ? void 0 : o.$el).querySelector("input")) == null || u.focus();
    }
    function Oe(o) {
      A.value ? x(o) : Ce();
    }
    function De(o) {
      var u, c;
      r.value = o, (c = ((u = a.value) == null ? void 0 : u.$el).querySelector("input")) == null || c.focus();
    }
    function Ue(o) {
      var c;
      o === "Backspace" && F.value.length > 0 ? F.value = F.value.slice(0, -1) : F.value += o;
      const u = ze(F.value);
      u != null && u.length && (y.value = (c = Y.value) == null ? void 0 : c.findIndex(
        (i) => i[t.optionValueKey] === u[0][t.optionValueKey]
      ), typeof y.value == "number" && y.value >= 0 && de(y.value)), ro(() => {
        F.value = "";
      }, 1e3);
    }
    function Ye(o) {
      const u = o.key;
      /^[\dA-Za-z\u0400-\u04FF]$/.test(u) ? (o.preventDefault(), _(o), t.search ? De(u) : Ue(u)) : Ve(o);
    }
    function Ve(o) {
      const u = o.code, c = ["ArrowUp", "ArrowDown"].includes(u), i = ["Enter", "Space"].includes(u), C = u === "Escape" && I.value;
      c ? qe(o, y.value) : i ? je(o, y.value) : C && x(o);
    }
    function qe(o, u) {
      var C;
      o.preventDefault();
      const c = o.code;
      I.value || _(o);
      const i = (C = Y.value) == null ? void 0 : C.length;
      i && (typeof u == "number" ? u === i - 1 && c === "ArrowDown" ? y.value = 0 : u === 0 && c === "ArrowUp" ? y.value = i - 1 : y.value = c === "ArrowDown" ? u + 1 : u - 1 : y.value = c === "ArrowDown" ? 0 : i - 1, de(y.value));
    }
    function je(o, u) {
      var i, C, T;
      if (o.preventDefault(), !I.value)
        return _(o);
      const c = u ? ((i = Y.value) == null ? void 0 : i[u]) ?? ((C = Y.value) == null ? void 0 : C[0]) : (T = Y.value) == null ? void 0 : T[0];
      E(c) || we(c);
    }
    async function de(o) {
      var c, i;
      await ne(), typeof o != "number" && ce();
      const u = o ?? y.value;
      if (typeof u == "number" && u >= 0) {
        const C = (c = $.value) == null ? void 0 : c.querySelectorAll(".m-select-list-item");
        (i = C == null ? void 0 : C[u]) == null || i.scrollIntoView({
          behavior: "auto",
          block: "nearest",
          inline: "start"
        });
      }
    }
    function ce(o) {
      var c;
      const u = (c = Y.value) == null ? void 0 : c.findIndex((i) => {
        var C, T;
        return t.multiple && Array.isArray(t.modelValue) ? o ? o[t.optionValueKey] === i[t.optionValueKey] : [...t.modelValue].reverse()[0] === i[t.optionValueKey] : ((T = (C = z.value) == null ? void 0 : C[0]) == null ? void 0 : T[t.optionValueKey]) === i[t.optionValueKey];
      });
      y.value = u && u >= 0 ? u : 0;
    }
    function we(o, u = !0) {
      var T;
      u && !t.multiple && ne(() => x()), r.value = "";
      const c = (T = z.value) == null ? void 0 : T.some(
        (ee) => ee[t.optionValueKey] === o[t.optionValueKey]
      );
      let i = z.value;
      c && t.multiple ? i = i == null ? void 0 : i.filter(
        (ee) => ee[t.optionValueKey] !== o[t.optionValueKey]
      ) : t.multiple ? i.push(o) : i = [o];
      const C = i.map((ee) => ee[t.optionValueKey]);
      d("update:model-value", t.multiple ? C : C[0]), d("selected-option", o), ce(o), Ce();
    }
    return (o, u) => {
      var c;
      return Pe((V(), L(
        "div",
        {
          ref_key: "mazSelectElement",
          ref: h,
          class: N(["m-select", [
            { "--is-open": I.value, "--disabled": o.disabled, "--block": o.block },
            t.class,
            `--${o.size}`
          ]]),
          style: te(o.style)
        },
        [
          Z(he, re({
            id: P(D),
            ref_key: "mazInputComponent",
            ref: G,
            class: "m-select-input"
          }, o.$attrs, {
            required: o.required,
            "border-active": A.value,
            color: o.color,
            "model-value": U.value,
            autocomplete: "off",
            size: o.size,
            block: "",
            disabled: o.disabled,
            onFocus: oe(_, ["prevent", "stop"]),
            onBlur: oe(x, ["prevent", "stop"]),
            onClick: oe(_, ["prevent", "stop"]),
            onChange: u[0] || (u[0] = (i) => d("change", i)),
            onKeydown: Ye
          }), {
            "right-icon": H(() => [
              j("button", {
                tabindex: "-1",
                type: "button",
                class: "m-select-input__toggle-button maz-custom",
                "aria-label": `${I.value ? "collapse" : "expand"} list of options`,
                onClick: oe(Oe, ["stop"])
              }, [
                Z(P(k), { class: "m-select-chevron maz-text-xl" })
              ], 8, Co)
            ]),
            _: 1
            /* STABLE */
          }, 16, ["id", "required", "border-active", "color", "model-value", "size", "disabled"]),
          Z(Xe, { name: le.value }, {
            default: H(() => [
              I.value ? (V(), L(
                "div",
                {
                  key: 0,
                  ref_key: "optionsListElement",
                  ref: $,
                  class: N(["m-select-list", {
                    "--top": o.listPosition.includes("top"),
                    "--left": o.listPosition.includes("left"),
                    "--right": o.listPosition.includes("right"),
                    "--bottom": o.listPosition.includes("bottom")
                  }]),
                  style: te({
                    maxHeight: `${o.maxListHeight}px`,
                    maxWidth: `${o.maxListWidth}px`
                  })
                },
                [
                  o.search ? (V(), O(he, {
                    key: 0,
                    ref_key: "searchInputComponent",
                    ref: a,
                    modelValue: r.value,
                    "onUpdate:modelValue": [
                      u[1] || (u[1] = (i) => r.value = i),
                      u[2] || (u[2] = (i) => y.value = 0)
                    ],
                    size: "sm",
                    color: o.color,
                    placeholder: o.searchPlaceholder,
                    name: "search",
                    autocomplete: "off",
                    tabindex: "-1",
                    class: "m-select-list__search-input maz-flex-none",
                    "left-icon": P(b),
                    onKeydown: Ve
                  }, null, 8, ["modelValue", "color", "placeholder", "left-icon"])) : g("v-if", !0),
                  g(`
          @slot No results slot - Displayed when no results corresponding with search query
        `),
                  !Y.value || Y.value.length <= 0 ? R(o.$slots, "no-results", { key: 1 }, () => [
                    j("span", Vo, [
                      Z(P(K), { class: "maz-h-6 maz-w-6 maz-text-normal" })
                    ])
                  ], !0) : (V(), L("div", wo, [
                    (V(!0), L(
                      Ie,
                      null,
                      xe(Y.value, (i, C) => (V(), L(
                        Ie,
                        { key: C },
                        [
                          g(`
              @slot Custom optgroup label
                @binding {String} label - the label of the optgroup
            `),
                          i.label && i.isOptGroup ? R(o.$slots, "optgroup", {
                            key: 0,
                            label: i.label
                          }, () => [
                            j(
                              "span",
                              So,
                              X(i.label),
                              1
                              /* TEXT */
                            )
                          ], !0) : (V(), L("button", {
                            key: 1,
                            tabindex: "-1",
                            type: "button",
                            class: N(["m-select-list-item maz-custom maz-flex-none", [
                              {
                                "--is-keyboard-selected": y.value === C,
                                "--is-selected": M(i),
                                "--is-none-value": E(i[o.optionValueKey])
                              }
                            ]]),
                            style: te(o.itemHeight ? { height: `${o.itemHeight}px` } : void 0),
                            onClick: oe((T) => we(i), ["prevent", "stop"])
                          }, [
                            o.multiple ? (V(), O(P(f), {
                              key: 0,
                              tabindex: "-1",
                              "model-value": M(i),
                              size: "sm",
                              color: o.color
                            }, null, 8, ["model-value", "color"])) : g("v-if", !0),
                            g(`
                @slot Custom option
                  @binding {Object} option - the option object
                  @binding {Boolean} is-selected - if the option is selected
              `),
                            R(o.$slots, "default", {
                              option: i,
                              isSelected: M(i)
                            }, () => [
                              j(
                                "span",
                                null,
                                X(i[o.optionLabelKey]),
                                1
                                /* TEXT */
                              )
                            ], !0)
                          ], 14, Io))
                        ],
                        64
                        /* STABLE_FRAGMENT */
                      ))),
                      128
                      /* KEYED_FRAGMENT */
                    ))
                  ]))
                ],
                6
                /* CLASS, STYLE */
              )) : g("v-if", !0)
            ]),
            _: 3
            /* FORWARDED */
          }, 8, ["name"])
        ],
        6
        /* CLASS, STYLE */
      )), [
        [P(po), {
          exclude: (c = o.excludeSelectors) != null && c.length ? o.excludeSelectors : [],
          handler: x
        }]
      ]);
    };
  }
}), $o = /* @__PURE__ */ se(ko, [["__scopeId", "data-v-cc87f1d6"]]);
function Me(n) {
  return !!n;
}
function $e(n) {
  return [...n].map((l) => {
    const e = l.codePointAt(0);
    return e ? e % 32 + 127461 : void 0;
  }).filter(Me).map((l) => String.fromCodePoint(l)).join("");
}
function Te(n, l) {
  const e = _e(n, l);
  if (!e)
    throw new TypeError(`[maz-ui](injectStrict) Could not resolve ${n}`);
  return e;
}
function Ke() {
  if (typeof window > "u")
    return;
  const n = window.navigator.language;
  if (!n)
    return;
  let l = n.slice(3, 7).toUpperCase();
  return l === "" && (l = n.slice(0, 2).toUpperCase()), l === "EN" && (l = "US"), l === "JA" && (l = "JP"), {
    locale: l,
    browserLocale: n
  };
}
let ye, Be;
function Bo(n, l, e) {
  return e != null && e[l] ? e[l] : ((Be !== n || !ye) && (Be = n, ye = new Intl.DisplayNames([n], { type: "region" })), ye.of(l));
}
function Po(n, l) {
  var d;
  const e = [], t = Ae();
  n = n ?? ((d = Ke()) == null ? void 0 : d.browserLocale) ?? "en-US";
  for (const f of t) {
    const b = Bo(n, f, l);
    if (b)
      try {
        const k = ue(f);
        e.push({
          iso2: f,
          dialCode: k,
          name: b
        });
      } catch (k) {
        console.error(`[MazPhoneNumberInput](getCountryCallingCode) ${k}`);
      }
  }
  return e;
}
async function Ao() {
  try {
    const n = await fetch("https://ipwho.is"), { country_code: l } = await n.json();
    return l;
  } catch (n) {
    throw new Error(`[MazPhoneNumberInput](fetchCountryCode) ${n}`);
  }
}
function Fo(n) {
  if (!n)
    return "";
  const l = new RegExp(/[^\d ()+-]/g);
  return n.replaceAll(l, "").trim();
}
function Ne() {
  return {
    sanitizePhoneNumber: Fo,
    fetchCountryCode: Ao,
    getBrowserLocale: Ke,
    getCountriesList: Po
  };
}
const Eo = ["id"], Lo = {
  key: 0,
  class: "maz-text-lg"
}, Mo = /* @__PURE__ */ ae({
  __name: "CountrySelector",
  props: {
    style: { default: void 0 },
    class: { default: void 0 },
    modelValue: { default: void 0 },
    id: {},
    color: {},
    size: {},
    preferredCountries: { default: void 0 },
    ignoredCountries: { default: void 0 },
    onlyCountries: { default: void 0 },
    customCountriesList: { default: void 0 },
    locales: {},
    listPosition: { default: "bottom left" },
    noFlags: { type: Boolean },
    noSearch: { type: Boolean },
    disabled: { type: Boolean },
    showCodeOnList: { type: Boolean },
    countryLocale: { default: void 0 },
    success: { type: Boolean },
    error: { type: Boolean },
    countrySelectorDisplayName: { type: Boolean },
    width: { default: "9rem" },
    excludeSelectors: { default: void 0 }
  },
  emits: ["update:model-value"],
  setup(n) {
    const l = n, { phoneNumber: e } = Te("data"), t = B(), { getCountriesList: d } = Ne(), f = m(() => d(l.countryLocale, l.customCountriesList)), b = m(
      () => {
        var s;
        return (s = f.value) == null ? void 0 : s.filter((p) => {
          var w;
          return !((w = l.ignoredCountries) != null && w.includes(p.iso2));
        });
      }
    ), k = m(() => {
      const s = l.onlyCountries || l.preferredCountries;
      return s == null ? void 0 : s.map(
        (p) => {
          var w;
          return (w = b.value) == null ? void 0 : w.find((I) => I.iso2.includes(p));
        }
      );
    }), K = m(
      () => {
        var s;
        return (s = b.value) == null ? void 0 : s.filter((p) => {
          var w;
          return !((w = l.preferredCountries) != null && w.includes(p.iso2));
        });
      }
    ), A = m(
      () => l.preferredCountries ? [...k.value ?? [], ...K.value ?? []] : l.onlyCountries ? k.value : b.value
    ), y = m(
      () => {
        var s;
        return (s = A.value) == null ? void 0 : s.map(
          (p) => p ? {
            ...p,
            dialCode: `+${p.dialCode}`
          } : void 0
        ).filter(Me);
      }
    );
    async function S() {
      var s, p;
      (p = (s = t.value) == null ? void 0 : s.$el.querySelector("input")) == null || p.focus();
    }
    return (s, p) => (V(), L(
      "div",
      {
        class: N(["m-country-selector", [l.class, { "--no-flags": s.noFlags }]]),
        style: te(s.style)
      },
      [
        s.modelValue && !s.noFlags ? (V(), L("button", {
          key: 0,
          id: `country-selector-flag-button-${s.id}`,
          class: N(["m-country-selector__country-flag maz-text-xl", {
            "--should-have-bottom-flag": s.locales.countrySelector.placeholder.length > 0
          }]),
          tabindex: "-1",
          type: "button",
          onClick: S
        }, [
          g(`
        @slot Country selector flag
          @binding {String} country-code - current selected country code - Ex: \`"FR"\`
      `),
          R(s.$slots, "selector-flag", { countryCode: s.modelValue }, () => [
            ve(
              X(P($e)(s.modelValue)),
              1
              /* TEXT */
            )
          ], !0)
        ], 10, Eo)) : g("v-if", !0),
        Z($o, re({
          id: `country-selector-${s.id}`,
          ref_key: "CountrySelectorRef",
          ref: t,
          "model-value": s.modelValue
        }, s.$attrs, {
          class: "m-country-selector__select",
          "option-value-key": "iso2",
          "option-label-key": "name",
          "option-input-value-key": s.countrySelectorDisplayName ? "name" : "dialCode",
          "max-list-width": 250,
          disabled: s.disabled,
          color: s.color,
          size: s.size,
          error: s.error,
          "list-position": s.listPosition,
          "item-height": 38,
          success: s.success,
          search: !s.noSearch,
          "search-placeholder": s.locales.countrySelector.searchPlaceholder,
          options: y.value,
          hint: P(e) && !s.modelValue ? s.locales.countrySelector.error : void 0,
          label: s.locales.countrySelector.placeholder,
          style: {
            width: s.width
          },
          "exclude-selectors": [`#country-selector-flag-button-${s.id}`, ...s.excludeSelectors ?? []],
          "onUpdate:modelValue": p[0] || (p[0] = (w) => s.$emit("update:model-value", w))
        }), {
          "no-results": H(() => [
            R(s.$slots, "no-results", {}, void 0, !0)
          ]),
          default: H(({ option: w, isSelected: I }) => [
            j(
              "div",
              {
                class: N(["m-country-selector__select__item maz-flex maz-items-center maz-gap-1 maz-truncate", {
                  "m-country-selector__select__item--selected": I
                }])
              },
              [
                !s.noFlags && typeof w.iso2 == "string" ? (V(), L("span", Lo, [
                  g(`
              @slot Country list flag
                @binding {String} country-code - country code of option - Ex: \`"FR"\`
                @binding {{ iso2: string; dialCode: string; name: string; }} option - country data
                @binding {Boolean} is-selected - \`true\` if option is selected
            `),
                  R(s.$slots, "country-list-flag", {
                    countryCode: w.iso2,
                    option: w,
                    isSelected: I
                  }, () => [
                    ve(
                      X(P($e)(w.iso2)),
                      1
                      /* TEXT */
                    )
                  ], !0)
                ])) : g("v-if", !0),
                s.showCodeOnList ? (V(), L(
                  "span",
                  {
                    key: 1,
                    class: N(["maz-w-9 maz-flex-none", { "maz-text-muted": !I }])
                  },
                  X(w.dialCode),
                  3
                  /* TEXT, CLASS */
                )) : g("v-if", !0),
                j(
                  "span",
                  {
                    class: N(["maz-flex-1 maz-truncate", { "maz-font-semibold": I }])
                  },
                  X(w.name),
                  3
                  /* TEXT, CLASS */
                )
              ],
              2
              /* CLASS */
            )
          ]),
          _: 3
          /* FORWARDED */
        }, 16, ["id", "model-value", "option-input-value-key", "disabled", "color", "size", "error", "list-position", "success", "search", "search-placeholder", "options", "hint", "label", "style", "exclude-selectors"])
      ],
      6
      /* CLASS, STYLE */
    ));
  }
}), To = /* @__PURE__ */ se(Mo, [["__scopeId", "data-v-1e2814b9"]]);
function Ko(n) {
  try {
    const l = to(n);
    return l || (console.error(`[maz-ui](MazPhoneNumberInput) The code country "${n}" is not available`), !1);
  } catch (l) {
    return console.error(`[maz-ui](MazPhoneNumberInput) ${l}`), !1;
  }
}
function No({
  phoneNumber: n,
  countryCode: l
}) {
  try {
    if (!n)
      return {
        isValid: !1,
        countryCode: l
      };
    const e = lo(n, l);
    return {
      countryCode: (e == null ? void 0 : e.country) ?? l,
      isValid: (e == null ? void 0 : e.isValid()) ?? !1,
      isPossible: e == null ? void 0 : e.isPossible(),
      countryCallingCode: e == null ? void 0 : e.countryCallingCode,
      nationalNumber: e == null ? void 0 : e.nationalNumber,
      type: e == null ? void 0 : e.getType(),
      formatInternational: e == null ? void 0 : e.formatInternational(),
      formatNational: e == null ? void 0 : e.formatNational(),
      uri: e == null ? void 0 : e.getURI(),
      e164: e == null ? void 0 : e.format("E.164"),
      rfc3966: e == null ? void 0 : e.format("RFC3966"),
      phoneNumber: n
    };
  } catch (e) {
    throw new Error(`[MazPhoneNumberInput](getResultsFromPhoneNumber) ${e}`);
  }
}
function Ro(n, l) {
  try {
    return l ? new no(n).input(l) : "";
  } catch (e) {
    throw new Error(`[MazPhoneNumberInput](getAsYouTypeFormat) ${e}`);
  }
}
async function Oo() {
  const { default: n } = await import("./examples.mobile.json-JpNGylGv.mjs");
  return n;
}
function Do(n, l) {
  var e;
  try {
    return n && l ? (e = ao(l, n)) == null ? void 0 : e.formatNational() : void 0;
  } catch (t) {
    console.error(`[maz-ui](MazPhoneNumberInput) ${t}`);
  }
}
function Re() {
  function n(l, e) {
    return ue(l) === ue(e);
  }
  return {
    getAsYouTypeFormat: Ro,
    getPhoneNumberResults: No,
    getPhoneNumberExamplesFile: Oo,
    getPhoneNumberExample: Do,
    isSameCountryCallingCode: n,
    isCountryAvailable: Ko,
    getCountries: Ae,
    getCountryCallingCode: ue
  };
}
const Uo = /* @__PURE__ */ ae({
  __name: "PhoneInput",
  props: /* @__PURE__ */ ke({
    id: {},
    color: {},
    size: {},
    locales: {},
    label: { default: void 0 },
    placeholder: { default: void 0 },
    noExample: { type: Boolean },
    disabled: { type: Boolean },
    hasRadius: { type: Boolean },
    success: { type: Boolean },
    error: { type: Boolean },
    autoFormat: { type: Boolean },
    noFormattingAsYouType: { type: Boolean }
  }, {
    modelValue: {},
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ ke(["update:model-value"], ["update:modelValue"]),
  setup(n, { emit: l }) {
    const e = n, t = l, d = eo(n, "modelValue"), { getPhoneNumberExamplesFile: f, getPhoneNumberExample: b } = Re(), { selectionRange: k, results: K, selectedCountry: A } = Te("data"), y = B(), S = B(!1);
    function s(v, z) {
      const h = b(v, z);
      return h ? `${e.locales.phoneInput.example} ${h}` : void 0;
    }
    const p = m(() => {
      var z;
      if (e.label || e.placeholder)
        return e.label || e.placeholder;
      const v = e.locales.phoneInput.placeholder;
      if (e.noExample || !y.value)
        return v;
      {
        const h = s(y.value, A.value);
        return (z = K.value) != null && z.isValid || !h ? v : h;
      }
    }), w = m(() => e.placeholder ? {
      placeholder: p.value
    } : {
      label: p.value
    }), I = B();
    async function D() {
      try {
        if (y.value)
          return;
        y.value = await f();
      } catch (v) {
        console.error("[maz-ui](MazPhoneNumberInput) while loading phone number examples file", v);
      }
    }
    async function W(v) {
      I.value && v && Q(I.value, v), await ne(), t("update:model-value", v);
    }
    function Q(v, z) {
      const h = v.$el.querySelector("input");
      k.value.start = h == null ? void 0 : h.selectionStart, k.value.end = h == null ? void 0 : h.selectionEnd, k.value.cursorAtEnd = z && typeof k.value.start == "number" && z.length > 0 ? k.value.start >= z.length : !0;
    }
    return ge(() => {
      e.noExample || D();
    }), (v, z) => (V(), O(he, re({
      id: v.id,
      ref_key: "PhoneInputRef",
      ref: I,
      "model-value": d.value
    }, { ...v.$attrs, ...w.value }, {
      disabled: v.disabled,
      color: v.color,
      error: v.error,
      size: v.size,
      success: v.success,
      type: "tel",
      inputmode: "tel",
      class: ["m-phone-input", [
        {
          "--border-radius": v.hasRadius,
          "--error": v.error || !P(K).isValid,
          "--focused": S.value
        }
      ]],
      onFocus: z[0] || (z[0] = (h) => S.value = !0),
      onBlur: z[1] || (z[1] = (h) => S.value = !1),
      "onUpdate:modelValue": z[2] || (z[2] = (h) => W(h))
    }), null, 16, ["id", "model-value", "disabled", "color", "error", "size", "success", "class"]));
  }
}), Yo = /* @__PURE__ */ se(Uo, [["__scopeId", "data-v-f3c379ea"]]), qo = {
  countrySelector: {
    placeholder: "Country code",
    error: "Choose country",
    searchPlaceholder: "Search the country"
  },
  phoneInput: {
    placeholder: "Phone number",
    example: "Example:"
  }
}, jo = /* @__PURE__ */ ae({
  name: "MazPhoneNumberInput",
  inheritAttrs: !1,
  __name: "MazPhoneNumberInput",
  props: {
    style: { default: void 0 },
    class: { default: void 0 },
    modelValue: { default: void 0 },
    defaultPhoneNumber: { default: void 0 },
    countryCode: { default: void 0 },
    defaultCountryCode: { default: void 0 },
    id: { default: void 0 },
    placeholder: { default: void 0 },
    label: { default: void 0 },
    preferredCountries: { default: void 0 },
    ignoredCountries: { default: void 0 },
    onlyCountries: { default: void 0 },
    translations: { default: void 0 },
    listPosition: { default: "bottom left" },
    color: { default: "primary" },
    size: { default: "md" },
    noFlags: { type: Boolean },
    disabled: { type: Boolean },
    noExample: { type: Boolean },
    noSearch: { type: Boolean },
    noUseBrowserLocale: { type: Boolean },
    fetchCountry: { type: Boolean },
    noCountrySelector: { type: Boolean },
    showCodeOnList: { type: Boolean },
    customCountriesList: { default: void 0 },
    autoFormat: { type: Boolean, default: !0 },
    noFormattingAsYouType: { type: Boolean, default: !1 },
    countryLocale: { default: void 0 },
    noValidationError: { type: Boolean },
    noValidationSuccess: { type: Boolean },
    success: { type: Boolean },
    error: { type: Boolean },
    countrySelectorDisplayName: { type: Boolean },
    countrySelectorWidth: { default: "9rem" },
    block: { type: Boolean },
    excludeSelectors: { default: void 0 },
    orientation: { default: "responsive" }
  },
  emits: ["update:model-value", "country-code", "update:country-code", "update", "data"],
  setup(n, { emit: l }) {
    const e = n, t = l, { fetchCountryCode: d, sanitizePhoneNumber: f, getBrowserLocale: b } = Ne(), { isCountryAvailable: k, getPhoneNumberResults: K, getAsYouTypeFormat: A } = Re(), y = be({
      componentName: "MazPhoneNumberInput",
      providedId: e.id
    }), S = B(""), s = B(), p = B({
      isValid: !1,
      countryCode: void 0
    }), w = B({
      start: 0,
      end: 0,
      cursorAtEnd: !0
    });
    oo("data", {
      selectedCountry: s,
      phoneNumber: S,
      results: p,
      selectionRange: w
    });
    const I = m(() => ({
      ...qo,
      ...e.translations
    }));
    ge(async () => {
      var a;
      if (z(e.countryCode ?? e.defaultCountryCode), e.fetchCountry && !s.value) {
        const $ = await d();
        z($);
      }
      if (!e.defaultCountryCode && !e.noUseBrowserLocale && !s.value) {
        const $ = (a = b()) == null ? void 0 : a.locale;
        z($);
      }
    });
    const D = B();
    function W() {
      var a;
      return (a = D.value) == null ? void 0 : a.$el.querySelector("input");
    }
    async function Q() {
      var a;
      await ne(), (a = W()) == null || a.select();
    }
    function v(a) {
      G({
        countryCode: a,
        autoFormat: e.autoFormat,
        noFormattingAsYouType: e.noFormattingAsYouType
      }), Q();
    }
    function z(a) {
      if (a) {
        if (!k(a)) {
          s.value = void 0;
          return;
        }
        s.value = a;
      }
    }
    function h({
      newPhoneNumber: a,
      autoFormat: $,
      noFormattingAsYouType: E,
      updateResults: M = !0
    }) {
      const U = f(a);
      if (M && (p.value = K({
        phoneNumber: U,
        countryCode: s.value
      })), p.value.isValid && p.value.formatNational && $)
        S.value = p.value.formatNational;
      else if (w.value.cursorAtEnd && !E) {
        const le = A(s.value, U);
        S.value = le;
      } else
        S.value = U;
      p.value.countryCode && p.value.countryCode !== s.value && G({
        countryCode: p.value.countryCode,
        autoFormat: $,
        noFormattingAsYouType: E,
        updateResults: !1
      });
    }
    function G({
      countryCode: a,
      autoFormat: $,
      noFormattingAsYouType: E,
      updateResults: M = !0
    }) {
      if (!a) {
        s.value = void 0;
        return;
      }
      a !== s.value && z(a), M && (p.value = K({
        phoneNumber: S.value,
        countryCode: a
      })), h({
        newPhoneNumber: S.value,
        autoFormat: $,
        noFormattingAsYouType: E,
        updateResults: !1
      });
    }
    return fe(
      () => e.modelValue ?? e.defaultPhoneNumber,
      (a, $) => {
        a !== $ && a !== S.value && h({
          newPhoneNumber: a,
          autoFormat: e.autoFormat,
          noFormattingAsYouType: e.noFormattingAsYouType
        });
      },
      {
        immediate: !0
      }
    ), fe(
      () => e.countryCode ?? e.defaultCountryCode,
      (a, $) => {
        a && a !== $ && a !== s.value && G({
          countryCode: a,
          autoFormat: e.autoFormat,
          noFormattingAsYouType: e.noFormattingAsYouType
        });
      },
      {
        immediate: !0
      }
    ), fe(
      p,
      (a) => {
        t("update", a), t("data", a), a.e164 && a.isValid ? t("update:model-value", a.e164) : t("update:model-value", S.value), t("country-code", s.value), t("update:country-code", s.value);
      },
      {
        immediate: !0
      }
    ), (a, $) => {
      var E;
      return V(), L(
        "div",
        {
          class: N(["m-phone-number-input", [e.class, { "--block": a.block }, a.orientation ? `--${a.orientation}` : void 0]]),
          style: te(a.style)
        },
        [
          a.noCountrySelector ? g("v-if", !0) : (V(), O(To, {
            key: 0,
            id: P(y),
            "model-value": s.value,
            color: a.color,
            size: a.size,
            "country-locale": a.countryLocale,
            "country-selector-display-name": a.countrySelectorDisplayName,
            "custom-countries-list": a.customCountriesList,
            "ignored-countries": a.ignoredCountries,
            "list-position": a.listPosition,
            "no-flags": a.noFlags,
            "no-search": a.noSearch,
            "exclude-selectors": a.excludeSelectors,
            error: a.error || (a.noValidationError ? !1 : !!S.value && !s.value),
            success: a.success || (a.noValidationSuccess ? !1 : (E = p.value) == null ? void 0 : E.isValid),
            locales: I.value,
            disabled: a.disabled,
            "show-code-on-list": a.showCodeOnList,
            "only-countries": a.onlyCountries,
            "preferred-countries": a.preferredCountries,
            width: a.countrySelectorWidth,
            "onUpdate:modelValue": v
          }, {
            "no-results": H(() => [
              g(`
          @slot Replace the "no results" icon in the country selector list
        `),
              R(a.$slots, "no-results", {}, void 0, !0)
            ]),
            "selector-flag": H(({ countryCode: M }) => [
              g(`
          @slot Country selector flag
            @binding {String} country-code - current selected country code - Ex: \`"FR"\`
        `),
              R(a.$slots, "selector-flag", { countryCode: M }, void 0, !0)
            ]),
            "country-list-flag": H(({ isSelected: M, option: U }) => [
              g(`
          @slot Country list flag
            @binding {String} country-code - country code of option - Ex: \`"FR"\`
            @binding {{ iso2: string; dialCode: string; name: string; }} option - country data
            @binding {Boolean} is-selected - \`true\` if option is selected
        `),
              R(a.$slots, "country-list-flag", {
                countryCode: U.iso2,
                option: U,
                isSelected: M
              }, void 0, !0)
            ]),
            _: 3
            /* FORWARDED */
          }, 8, ["id", "model-value", "color", "size", "country-locale", "country-selector-display-name", "custom-countries-list", "ignored-countries", "list-position", "no-flags", "no-search", "exclude-selectors", "error", "success", "locales", "disabled", "show-code-on-list", "only-countries", "preferred-countries", "width"])),
          Z(Yo, re({
            id: P(y),
            ref_key: "PhoneInputRef",
            ref: D,
            "model-value": S.value,
            color: a.color,
            size: a.size,
            "no-example": a.noExample,
            block: "",
            disabled: a.disabled
          }, a.$attrs, {
            "has-radius": !a.noCountrySelector,
            success: a.success || (a.noValidationSuccess ? !1 : p.value.isValid),
            error: a.error || (a.noValidationError ? !1 : !!S.value && !p.value.isValid),
            locales: I.value,
            "no-formatting-as-you-type": a.noFormattingAsYouType,
            "auto-format": a.autoFormat,
            label: a.label,
            placeholder: a.placeholder,
            "onUpdate:modelValue": $[0] || ($[0] = (M) => h({
              newPhoneNumber: M,
              autoFormat: a.autoFormat,
              noFormattingAsYouType: a.noFormattingAsYouType
            }))
          }), null, 16, ["id", "model-value", "color", "size", "no-example", "disabled", "has-radius", "success", "error", "locales", "no-formatting-as-you-type", "auto-format", "label", "placeholder"])
        ],
        6
        /* CLASS, STYLE */
      );
    };
  }
}), Qo = /* @__PURE__ */ se(jo, [["__scopeId", "data-v-b88dc7cd"]]);
export {
  Qo as M,
  se as _,
  Te as i,
  be as u
};

import { getCurrentInstance as Me, computed as f, defineComponent as he, defineAsyncComponent as K, ref as V, onMounted as Le, useSlots as Te, openBlock as m, createElementBlock as k, normalizeClass as H, normalizeStyle as Y, createElementVNode as L, createCommentVNode as v, renderSlot as q, createBlock as S, unref as g, resolveDynamicComponent as me, withDirectives as be, mergeProps as ge, toHandlers as Ee, vModelDynamic as Oe, createTextVNode as De, toDisplayString as re, withModifiers as P, withCtx as x, createVNode as F, useCssVars as Ne, onBeforeMount as Pe, nextTick as se, Transition as Fe, Fragment as ve, renderList as He } from "vue";
import '../assets/MazSelect.css';function ze({
  componentName: u,
  providedId: r
}) {
  const o = Me();
  return f(() => r ?? `${u}-${o == null ? void 0 : o.uid}`);
}
let ie = null;
function qe(u, r) {
  ie && clearTimeout(ie), ie = setTimeout(u, r);
}
const Ue = {
  removeAccents: !0,
  caseSensitive: !1,
  replaceSpaces: !0,
  removeSpecialCharacters: !1,
  trim: !0,
  normalizeSpaces: !0,
  removeNumbers: !1,
  customNormalizationForms: ["NFC", "NFKD"]
};
function _(u, r) {
  const o = { ...Ue, ...r }, t = {
    À: "A",
    Á: "A",
    Â: "A",
    Ã: "A",
    Ä: "A",
    Å: "A",
    à: "a",
    á: "a",
    â: "a",
    ã: "a",
    ä: "a",
    å: "a",
    È: "E",
    É: "E",
    Ê: "E",
    Ë: "E",
    è: "e",
    é: "e",
    ê: "e",
    ë: "e",
    Î: "I",
    Ï: "I",
    í: "I",
    î: "i",
    ï: "i",
    Ô: "O",
    Õ: "O",
    Ö: "O",
    Ø: "O",
    ô: "o",
    õ: "o",
    ö: "o",
    ø: "o",
    Ù: "U",
    Ú: "U",
    Û: "U",
    Ü: "U",
    ù: "u",
    ú: "u",
    û: "u",
    ü: "u",
    Ç: "C",
    ç: "c",
    ÿ: "y",
    Ñ: "N",
    ñ: "n",
    ó: "o"
  };
  let i = u.toString();
  if (o.trim && (i = i.trim()), o.normalizeSpaces && (i = i.replaceAll(/\s+/g, " ")), o.replaceSpaces && (i = i.replaceAll(" ", "-")), o.removeNumbers && (i = i.replaceAll(/\d/g, "")), o.removeAccents && (i = i.replaceAll(/[ÀÁÂÃÄÅÇÈÉÊËÎÏÑÔÕÖØÙÚÛÜàáâãäåçèéêëíîïñóôõöøùúûüÿ]/g, (c) => t[c] || c), i = i.replaceAll(/[\u0300-\u036F]/g, "")), o.caseSensitive === !1 && (i = i.toLowerCase()), o.removeSpecialCharacters && (i = i.replaceAll(/[^\dA-Z-]/gi, "")), o.trim && (i = i.trim()), o.customNormalizationForms)
    for (const c of o.customNormalizationForms)
      i = i.normalize(c);
  return i;
}
function je(u, r) {
  const o = u.length, t = r.length, i = [];
  for (let c = 0; c <= o; c++)
    i[c] = [c];
  for (let c = 0; c <= t; c++)
    i[0][c] = c;
  for (let c = 1; c <= o; c++)
    for (let h = 1; h <= t; h++) {
      const A = u[c - 1] === r[h - 1] ? 0 : 1;
      i[c][h] = Math.min(
        i[c - 1][h] + 1,
        i[c][h - 1] + 1,
        i[c - 1][h - 1] + A
      );
    }
  return i[o][t];
}
function Ve(u, r) {
  const o = je(u, r), t = Math.max(u.length, r.length);
  return 1 - o / t;
}
function Re(u, r, o = 0.75) {
  return Ve(u, r) >= o;
}
function ue(u, r, o = 0.75) {
  const t = f(
    () => _(typeof u == "string" ? u : u.value)
  ), i = f(
    () => _(typeof r == "string" ? r : r.value)
  ), c = f(() => typeof o == "number" ? o : o.value), h = f(() => Ve(t.value, i.value));
  return {
    isMatching: f(
      () => Re(t.value, i.value, c.value)
    ),
    score: h
  };
}
function ke(u, r, o) {
  var h;
  u.stopPropagation();
  const t = typeof o.value == "function" ? o.value : o.value.handler, i = typeof o.value == "object" ? o.value.exclude : void 0;
  let c = !1;
  if (i && i.length > 0) {
    for (const A of i)
      if (!c && u.target instanceof HTMLElement) {
        const U = (h = document.querySelector(A)) == null ? void 0 : h.getAttribute("id");
        c = u.target.getAttribute("id") === U;
      }
  }
  !r.contains(u.target) && !c && (t == null || t());
}
function Ie() {
  return document.ontouchstart === null ? "touchstart" : "click";
}
function We(u, r) {
  const o = Ie();
  document.removeEventListener(o, (t) => ke(t, u, r));
}
function Qe(u, r) {
  if (typeof r.value != "function" && typeof r.value == "object" && typeof r.value.handler != "function") {
    console.error("[maz-ui](vClosable) v-closable directive requires a handler function");
    return;
  }
  const o = Ie();
  document.addEventListener(o, (t) => ke(t, u, r));
}
const Ge = {
  mounted: Qe,
  unmounted: We
}, we = (u, r) => {
  const o = u.__vccOpts || u;
  for (const [t, i] of r)
    o[t] = i;
  return o;
};
function Ze(u, r) {
  let o;
  return function(...t) {
    clearTimeout(o), o = setTimeout(() => {
      u.apply(this, t);
    }, r);
  };
}
const Je = {
  key: 0,
  class: "m-input-wrapper-left"
}, Xe = { class: "m-input-wrapper-input" }, Ye = ["id", "type", "name", "inputmode", "placeholder", "aria-label", "disabled", "readonly", "required"], xe = { key: 0 }, _e = {
  key: 1,
  class: "m-input-wrapper-right"
}, et = /* @__PURE__ */ he({
  inheritAttrs: !1,
  __name: "MazInput",
  props: {
    style: { default: void 0 },
    class: { default: void 0 },
    modelValue: { default: void 0 },
    placeholder: { default: void 0 },
    label: { default: void 0 },
    name: { default: void 0 },
    color: { default: "primary" },
    type: { default: "text" },
    required: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    id: { default: void 0 },
    error: { type: Boolean, default: !1 },
    success: { type: Boolean, default: !1 },
    warning: { type: Boolean, default: !1 },
    hint: { default: void 0 },
    inputClasses: { default: void 0 },
    noBorder: { type: Boolean, default: !1 },
    noRadius: { type: Boolean, default: !1 },
    inputmode: { default: "text" },
    size: { default: "md" },
    debounce: { type: [Boolean, Number], default: !1 },
    debounceDelay: { default: 500 },
    validButton: { type: Boolean, default: !1 },
    validButtonLoading: { type: Boolean, default: !1 },
    autoFocus: { type: Boolean, default: !1 },
    borderActive: { type: Boolean, default: !1 },
    leftIcon: { type: [String, Function, Object], default: void 0 },
    rightIcon: { type: [String, Function, Object], default: void 0 },
    roundedSize: { default: void 0 },
    block: { type: Boolean }
  },
  emits: ["update:model-value", "focus", "blur", "click", "change"],
  setup(u, { emit: r }) {
    const o = u, t = r, i = K(() => import("./MazBtn-BXDpaXn1.mjs")), c = K(() => import("./MazIcon-BDGxCy9M.mjs")), h = K(() => import("./eye-slash-tjfxO0LK.mjs")), A = K(() => import("./eye-DqO_Jx56.mjs")), U = K(() => import("./check-7UA4j2f2.mjs")), z = V(!1), p = V(!1), T = V(), ee = ze({
      componentName: "MazInput",
      providedId: o.id
    });
    Le(() => {
      var l;
      o.autoFocus && ((l = T.value) == null || l.focus());
    });
    const W = f(() => o.type === "password"), te = f(() => z.value ? "text" : o.type), I = f(() => {
      if (!o.noBorder) {
        if (o.error)
          return "maz-border-danger";
        if (o.success)
          return "maz-border-success";
        if (o.warning)
          return "maz-border-warning";
        if (p.value || o.borderActive) {
          if (o.color === "black")
            return "maz-border-black";
          if (o.color === "danger")
            return "maz-border-danger";
          if (o.color === "info")
            return "maz-border-info";
          if (o.color === "primary")
            return "maz-border-primary";
          if (o.color === "secondary")
            return "maz-border-secondary";
          if (o.color === "success")
            return "maz-border-success";
          if (o.color === "warning")
            return "maz-border-warning";
          if (o.color === "white")
            return "maz-border-white";
        }
        return "--default-border";
      }
    }), j = Te(), Q = f(() => {
      const { required: l, placeholder: y } = o;
      if (y)
        return l ? `${y} *` : y;
    }), G = f(() => M.value !== void 0 && M.value !== ""), B = Ze(
      (l) => {
        t("update:model-value", l);
      },
      typeof o.debounce == "number" ? o.debounce : o.debounceDelay ?? 500
    );
    function E(l) {
      if (o.debounce)
        return B(l);
      t("update:model-value", l);
    }
    const M = f({
      get: () => o.modelValue,
      set: (l) => E(l)
    }), Z = f(() => (!!o.label || !!o.hint) && (p.value || !!G.value || !!o.placeholder || ["date", "month", "week"].includes(o.type))), J = f(() => !!o.label || !!o.hint);
    function X() {
      return !!j["right-icon"] || W.value || !!j["valid-button"] || o.validButton || !!o.rightIcon;
    }
    function C() {
      return !!j["left-icon"] || !!o.leftIcon;
    }
    function R(l) {
      t("focus", l), p.value = !0;
    }
    function oe(l) {
      t("blur", l), p.value = !1;
    }
    function le(l) {
      return t("change", l);
    }
    return (l, y) => (m(), k(
      "div",
      {
        class: H(["m-input", [
          {
            "--is-focused": p.value || l.borderActive,
            "--should-up": Z.value,
            "--has-label": J.value,
            "--is-disabled": l.disabled,
            "--is-readonly": l.readonly,
            "--has-z-2": l.error || l.warning || l.success,
            "--has-state": l.error || l.warning || l.success,
            "--block": l.block
          },
          o.class,
          `--${l.color}`,
          `--${l.size}`
        ]]),
        style: Y(l.style)
      },
      [
        L(
          "div",
          {
            class: H(["m-input-wrapper", [
              l.inputClasses,
              I.value,
              l.roundedSize ? `--rounded-${l.roundedSize}` : { "maz-rounded": !l.noRadius }
            ]])
          },
          [
            C() ? (m(), k("div", Je, [
              v(`
          @slot left-icon - The icon to display on the left of the input
        `),
              l.$slots["left-icon"] || l.leftIcon ? q(l.$slots, "left-icon", { key: 0 }, () => [
                typeof l.leftIcon == "string" ? (m(), S(g(c), {
                  key: 0,
                  name: l.leftIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])) : l.leftIcon ? (m(), S(me(l.leftIcon), {
                  key: 1,
                  class: "maz-text-xl maz-text-muted"
                })) : v("v-if", !0)
              ], !0) : v("v-if", !0)
            ])) : v("v-if", !0),
            L("div", Xe, [
              be(L("input", ge({
                id: g(ee),
                ref_key: "input",
                ref: T,
                "onUpdate:modelValue": y[0] || (y[0] = ($) => M.value = $),
                type: te.value,
                name: l.name
              }, l.$attrs, {
                inputmode: l.inputmode,
                placeholder: Q.value,
                "aria-label": l.label || l.placeholder,
                disabled: l.disabled,
                readonly: l.readonly,
                required: l.required,
                class: "m-input-input"
              }, Ee({
                blur: oe,
                focus: R,
                change: le
              }, !0), {
                onClick: y[1] || (y[1] = ($) => l.$emit("click", $))
              }), null, 16, Ye), [
                [Oe, M.value]
              ]),
              l.label || l.hint ? (m(), k(
                "span",
                {
                  key: 0,
                  class: H(["m-input-label", [
                    {
                      "maz-text-danger-600": l.error,
                      "maz-text-success-600": l.success,
                      "maz-text-warning-600": l.warning
                    }
                  ]])
                },
                [
                  De(
                    re(l.hint || l.label) + " ",
                    1
                    /* TEXT */
                  ),
                  l.required ? (m(), k("sup", xe, "*")) : v("v-if", !0)
                ],
                2
                /* CLASS */
              )) : v("v-if", !0)
            ]),
            X() ? (m(), k("div", _e, [
              v(`
          @slot right-icon - The icon to display on the right of the input
        `),
              l.$slots["right-icon"] || l.rightIcon ? q(l.$slots, "right-icon", { key: 0 }, () => [
                typeof l.rightIcon == "string" ? (m(), S(g(c), {
                  key: 0,
                  name: l.rightIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])) : l.rightIcon ? (m(), S(me(l.rightIcon), {
                  key: 1,
                  class: "maz-text-xl maz-text-muted"
                })) : v("v-if", !0)
              ], !0) : v("v-if", !0),
              W.value ? (m(), S(g(i), {
                key: 1,
                color: "transparent",
                tabindex: "-1",
                size: "mini",
                onClick: y[2] || (y[2] = P(($) => z.value = !z.value, ["stop"]))
              }, {
                default: x(() => [
                  z.value ? (m(), S(g(h), {
                    key: 0,
                    class: "maz-text-xl maz-text-muted"
                  })) : (m(), S(g(A), {
                    key: 1,
                    class: "maz-text-xl maz-text-muted"
                  }))
                ]),
                _: 1
                /* STABLE */
              })) : v("v-if", !0),
              v(`
          @slot valid-button - Replace the valid button by your own
        `),
              l.$slots["valid-button"] || l.validButton ? q(l.$slots, "valid-button", { key: 2 }, () => [
                F(g(i), {
                  color: "transparent",
                  disabled: l.disabled,
                  tabindex: "-1",
                  loading: l.validButtonLoading,
                  class: "m-input-valid-button",
                  size: "mini",
                  type: "submit"
                }, {
                  default: x(() => [
                    F(g(U), { class: "maz-text-2xl maz-text-normal" })
                  ]),
                  _: 1
                  /* STABLE */
                }, 8, ["disabled", "loading"])
              ], !0) : v("v-if", !0)
            ])) : v("v-if", !0)
          ],
          2
          /* CLASS */
        )
      ],
      6
      /* CLASS, STYLE */
    ));
  }
}), ye = /* @__PURE__ */ we(et, [["__scopeId", "data-v-e9affc48"]]), tt = ["aria-label"], ot = { class: "m-select-list__no-results" }, lt = {
  key: 2,
  class: "m-select-list__scroll-wrapper",
  tabindex: "-1"
}, at = { class: "m-select-list-optgroup" }, nt = ["onClick"], st = /* @__PURE__ */ he({
  inheritAttrs: !1,
  __name: "MazSelect",
  props: {
    style: { default: void 0 },
    class: { default: void 0 },
    id: { default: void 0 },
    modelValue: { default: void 0 },
    options: { default: void 0 },
    optionValueKey: { default: "value" },
    optionLabelKey: { default: "label" },
    optionInputValueKey: { default: "label" },
    listPosition: { default: "bottom left" },
    itemHeight: { default: void 0 },
    maxListHeight: { default: 240 },
    maxListWidth: { default: void 0 },
    size: { default: "md" },
    color: { default: "primary" },
    search: { type: Boolean },
    searchPlaceholder: { default: "Search in options" },
    open: { type: Boolean },
    multiple: { type: Boolean, default: void 0 },
    required: { type: Boolean },
    disabled: { type: Boolean },
    block: { type: Boolean },
    excludeSelectors: { default: void 0 }
  },
  emits: ["close", "open", "blur", "focus", "change", "update:model-value", "selected-option"],
  setup(u, { expose: r, emit: o }) {
    Ne((e) => ({
      "792163ea": te.value,
      e9859fae: ee.value,
      "42d9f8d1": W.value
    }));
    const t = u, i = o, c = K(() => import("./MazCheckbox-D3Fm-BFu.mjs")), h = K(() => import("./magnifying-glass-DZGg7953.mjs")), A = K(() => import("./chevron-down-CzMH-gFW.mjs")), U = K(() => import("./no-symbol-QAqP9IlR.mjs"));
    r({
      /** Method to open the option list */
      openList: D,
      /** Method to close the option list */
      closeList: O
    });
    const z = V(!1), p = V(), T = f(
      () => ["black", "transparent", "white"].includes(t.color)
    ), ee = f(
      () => T.value ? "var(--maz-color-black)" : `var(--maz-color-${t.color}-800)`
    ), W = f(
      () => T.value ? "var(--maz-color-muted)" : `var(--maz-color-${t.color}-100)`
    ), te = f(
      () => T.value ? "var(--maz-color-muted)" : `var(--maz-color-${t.color}-200)`
    ), I = f(() => z.value || t.open), j = ze({
      componentName: "MazSelect",
      providedId: t.id
    });
    function Q(e) {
      return {
        [t.optionValueKey]: e,
        [t.optionLabelKey]: e,
        [t.optionInputValueKey]: e
      };
    }
    function G(e) {
      return {
        ...e,
        [t.optionValueKey]: e[t.optionValueKey],
        [t.optionLabelKey]: e[t.optionLabelKey],
        [t.optionInputValueKey]: e[t.optionInputValueKey]
      };
    }
    const B = f(() => {
      var a;
      const e = [];
      if (!((a = t.options) != null && a.length))
        return [];
      for (const s of t.options)
        typeof s == "string" || typeof s == "number" || typeof s == "boolean" ? e.push(Q(s)) : typeof s == "object" && "options" in s && Array.isArray(s.options) ? e.push(
          { label: s.label, isOptGroup: !0 },
          ...s.options.map(
            (n) => typeof n == "string" || typeof n == "number" || typeof n == "boolean" ? Q(n) : G(n)
          )
        ) : e.push(G(s));
      return e;
    }), E = f(
      () => {
        var e;
        return ((e = B.value) == null ? void 0 : e.filter((a) => t.multiple ? Array.isArray(t.modelValue) ? t.modelValue.includes(a[t.optionValueKey]) && !C(a[t.optionValueKey]) : !1 : t.modelValue === a[t.optionValueKey] && !C(a[t.optionValueKey]))) ?? [];
      }
    );
    Pe(() => {
      var e;
      (e = t.options) != null && e.length || console.warn("[maz-ui](MazSelect) you must provide options"), ne();
    });
    const M = V(), Z = V(), J = V(), X = V();
    function C(e) {
      return e == null;
    }
    function R(e) {
      var s;
      return (((s = E.value) == null ? void 0 : s.some(
        (n) => n[t.optionValueKey] === e[t.optionValueKey]
      )) ?? !1) && !C(e[t.optionValueKey]);
    }
    const oe = f(() => {
      var a;
      if (t.multiple && t.modelValue && Array.isArray(t.modelValue))
        return t.modelValue.map(
          (s) => {
            var n, d;
            return (d = (n = B.value) == null ? void 0 : n.find((b) => b[t.optionValueKey] === s)) == null ? void 0 : d[t.optionInputValueKey];
          }
        ).join(", ");
      const e = (a = B.value) == null ? void 0 : a.find(
        (s) => s[t.optionValueKey] === t.modelValue
      );
      return C(t.modelValue) || e == null ? void 0 : e[t.optionInputValueKey];
    }), le = f(
      () => t.listPosition.includes("bottom") ? "maz-slide" : "maz-slideinvert"
    ), l = V(""), y = V("");
    function $(e, a) {
      return a && e && _(e).includes(_(a));
    }
    function ce(e) {
      var a;
      return e ? (a = B.value) == null ? void 0 : a.filter((s) => {
        const n = s[t.optionLabelKey], d = s[t.optionValueKey], b = s[t.optionInputValueKey];
        return $(n, e) || $(b, e) || $(d, e) || typeof n == "string" && ue(n, e, 0.5).isMatching.value || typeof b == "string" && ue(b, e, 0.5).isMatching.value || typeof d == "string" && ue(d, e, 0.5).isMatching.value;
      }) : B.value;
    }
    const w = f(() => ce(l.value));
    async function O(e) {
      var s, n;
      if (!I.value)
        return;
      if (e && ("relatedTarget" in e && ((s = M.value) != null && s.contains(e.relatedTarget)) || e.type === "keydown"))
        return e.preventDefault();
      const a = e && "relatedTarget" in e && e.relatedTarget instanceof HTMLElement && e.relatedTarget.getAttribute("id");
      if ((n = t.excludeSelectors) != null && n.includes(`#${a}`))
        return e == null ? void 0 : e.preventDefault();
      await se(), z.value = !1, p.value = 0, i("close", e);
    }
    async function D(e) {
      t.disabled || I.value || (e == null || e.preventDefault(), z.value = !0, await ae(), i("focus", e), i("open", z.value));
    }
    function de() {
      var e, a;
      (a = ((e = Z.value) == null ? void 0 : e.$el).querySelector("input")) == null || a.focus();
    }
    function Se(e) {
      z.value ? O(e) : de();
    }
    function Ke(e) {
      var a, s;
      l.value = e, (s = ((a = J.value) == null ? void 0 : a.$el).querySelector("input")) == null || s.focus();
    }
    function Ae(e) {
      var s;
      e === "Backspace" && y.value.length > 0 ? y.value = y.value.slice(0, -1) : y.value += e;
      const a = ce(y.value);
      a != null && a.length && (p.value = (s = w.value) == null ? void 0 : s.findIndex(
        (n) => n[t.optionValueKey] === a[0][t.optionValueKey]
      ), typeof p.value == "number" && p.value >= 0 && ae(p.value)), qe(() => {
        y.value = "";
      }, 1e3);
    }
    function Ce(e) {
      const a = e.key;
      /^[\dA-Za-z\u0400-\u04FF]$/.test(a) ? (e.preventDefault(), D(e), t.search ? Ke(a) : Ae(a)) : fe(e);
    }
    function fe(e) {
      const a = e.code, s = ["ArrowUp", "ArrowDown"].includes(a), n = ["Enter", "Space"].includes(a), d = a === "Escape" && I.value;
      s ? $e(e, p.value) : n ? Be(e, p.value) : d && O(e);
    }
    function $e(e, a) {
      var d;
      e.preventDefault();
      const s = e.code;
      I.value || D(e);
      const n = (d = w.value) == null ? void 0 : d.length;
      n && (typeof a == "number" ? a === n - 1 && s === "ArrowDown" ? p.value = 0 : a === 0 && s === "ArrowUp" ? p.value = n - 1 : p.value = s === "ArrowDown" ? a + 1 : a - 1 : p.value = s === "ArrowDown" ? 0 : n - 1, ae(p.value));
    }
    function Be(e, a) {
      var n, d, b;
      if (e.preventDefault(), !I.value)
        return D(e);
      const s = a ? ((n = w.value) == null ? void 0 : n[a]) ?? ((d = w.value) == null ? void 0 : d[0]) : (b = w.value) == null ? void 0 : b[0];
      C(s) || pe(s);
    }
    async function ae(e) {
      var s, n;
      await se(), typeof e != "number" && ne();
      const a = e ?? p.value;
      if (typeof a == "number" && a >= 0) {
        const d = (s = X.value) == null ? void 0 : s.querySelectorAll(".m-select-list-item");
        (n = d == null ? void 0 : d[a]) == null || n.scrollIntoView({
          behavior: "auto",
          block: "nearest",
          inline: "start"
        });
      }
    }
    function ne(e) {
      var s;
      const a = (s = w.value) == null ? void 0 : s.findIndex((n) => {
        var d, b;
        return t.multiple && Array.isArray(t.modelValue) ? e ? e[t.optionValueKey] === n[t.optionValueKey] : [...t.modelValue].reverse()[0] === n[t.optionValueKey] : ((b = (d = E.value) == null ? void 0 : d[0]) == null ? void 0 : b[t.optionValueKey]) === n[t.optionValueKey];
      });
      p.value = a && a >= 0 ? a : 0;
    }
    function pe(e, a = !0) {
      var b;
      a && !t.multiple && se(() => O()), l.value = "";
      const s = (b = E.value) == null ? void 0 : b.some(
        (N) => N[t.optionValueKey] === e[t.optionValueKey]
      );
      let n = E.value;
      s && t.multiple ? n = n == null ? void 0 : n.filter(
        (N) => N[t.optionValueKey] !== e[t.optionValueKey]
      ) : t.multiple ? n.push(e) : n = [e];
      const d = n.map((N) => N[t.optionValueKey]);
      i("update:model-value", t.multiple ? d : d[0]), i("selected-option", e), ne(e), de();
    }
    return (e, a) => {
      var s;
      return be((m(), k(
        "div",
        {
          ref_key: "mazSelectElement",
          ref: M,
          class: H(["m-select", [
            { "--is-open": I.value, "--disabled": e.disabled, "--block": e.block },
            t.class,
            `--${e.size}`
          ]]),
          style: Y(e.style)
        },
        [
          F(ye, ge({
            id: g(j),
            ref_key: "mazInputComponent",
            ref: Z,
            class: "m-select-input"
          }, e.$attrs, {
            required: e.required,
            "border-active": z.value,
            color: e.color,
            "model-value": oe.value,
            autocomplete: "off",
            size: e.size,
            block: "",
            disabled: e.disabled,
            onFocus: P(D, ["prevent", "stop"]),
            onBlur: P(O, ["prevent", "stop"]),
            onClick: P(D, ["prevent", "stop"]),
            onChange: a[0] || (a[0] = (n) => i("change", n)),
            onKeydown: Ce
          }), {
            "right-icon": x(() => [
              L("button", {
                tabindex: "-1",
                type: "button",
                class: "m-select-input__toggle-button maz-custom",
                "aria-label": `${I.value ? "collapse" : "expand"} list of options`,
                onClick: P(Se, ["stop"])
              }, [
                F(g(A), { class: "m-select-chevron maz-text-xl" })
              ], 8, tt)
            ]),
            _: 1
            /* STABLE */
          }, 16, ["id", "required", "border-active", "color", "model-value", "size", "disabled"]),
          F(Fe, { name: le.value }, {
            default: x(() => [
              I.value ? (m(), k(
                "div",
                {
                  key: 0,
                  ref_key: "optionsListElement",
                  ref: X,
                  class: H(["m-select-list", {
                    "--top": e.listPosition.includes("top"),
                    "--left": e.listPosition.includes("left"),
                    "--right": e.listPosition.includes("right"),
                    "--bottom": e.listPosition.includes("bottom")
                  }]),
                  style: Y({
                    maxHeight: `${e.maxListHeight}px`,
                    maxWidth: `${e.maxListWidth}px`
                  })
                },
                [
                  e.search ? (m(), S(ye, {
                    key: 0,
                    ref_key: "searchInputComponent",
                    ref: J,
                    modelValue: l.value,
                    "onUpdate:modelValue": [
                      a[1] || (a[1] = (n) => l.value = n),
                      a[2] || (a[2] = (n) => p.value = 0)
                    ],
                    size: "sm",
                    color: e.color,
                    placeholder: e.searchPlaceholder,
                    name: "search",
                    autocomplete: "off",
                    tabindex: "-1",
                    class: "m-select-list__search-input maz-flex-none",
                    "left-icon": g(h),
                    onKeydown: fe
                  }, null, 8, ["modelValue", "color", "placeholder", "left-icon"])) : v("v-if", !0),
                  v(`
          @slot No results slot - Displayed when no results corresponding with search query
        `),
                  !w.value || w.value.length <= 0 ? q(e.$slots, "no-results", { key: 1 }, () => [
                    L("span", ot, [
                      F(g(U), { class: "maz-h-6 maz-w-6 maz-text-normal" })
                    ])
                  ], !0) : (m(), k("div", lt, [
                    (m(!0), k(
                      ve,
                      null,
                      He(w.value, (n, d) => (m(), k(
                        ve,
                        { key: d },
                        [
                          v(`
              @slot Custom optgroup label
                @binding {String} label - the label of the optgroup
            `),
                          n.label && n.isOptGroup ? q(e.$slots, "optgroup", {
                            key: 0,
                            label: n.label
                          }, () => [
                            L(
                              "span",
                              at,
                              re(n.label),
                              1
                              /* TEXT */
                            )
                          ], !0) : (m(), k("button", {
                            key: 1,
                            tabindex: "-1",
                            type: "button",
                            class: H(["m-select-list-item maz-custom maz-flex-none", [
                              {
                                "--is-keyboard-selected": p.value === d,
                                "--is-selected": R(n),
                                "--is-none-value": C(n[e.optionValueKey])
                              }
                            ]]),
                            style: Y(e.itemHeight ? { height: `${e.itemHeight}px` } : void 0),
                            onClick: P((b) => pe(n), ["prevent", "stop"])
                          }, [
                            e.multiple ? (m(), S(g(c), {
                              key: 0,
                              tabindex: "-1",
                              "model-value": R(n),
                              size: "sm",
                              color: e.color
                            }, null, 8, ["model-value", "color"])) : v("v-if", !0),
                            v(`
                @slot Custom option
                  @binding {Object} option - the option object
                  @binding {Boolean} is-selected - if the option is selected
              `),
                            q(e.$slots, "default", {
                              option: n,
                              isSelected: R(n)
                            }, () => [
                              L(
                                "span",
                                null,
                                re(n[e.optionLabelKey]),
                                1
                                /* TEXT */
                              )
                            ], !0)
                          ], 14, nt))
                        ],
                        64
                        /* STABLE_FRAGMENT */
                      ))),
                      128
                      /* KEYED_FRAGMENT */
                    ))
                  ]))
                ],
                6
                /* CLASS, STYLE */
              )) : v("v-if", !0)
            ]),
            _: 3
            /* FORWARDED */
          }, 8, ["name"])
        ],
        6
        /* CLASS, STYLE */
      )), [
        [g(Ge), {
          exclude: (s = e.excludeSelectors) != null && s.length ? e.excludeSelectors : [],
          handler: O
        }]
      ]);
    };
  }
}), ut = /* @__PURE__ */ we(st, [["__scopeId", "data-v-cc87f1d6"]]);
export {
  ut as M,
  we as _,
  ze as u
};

import { getCurrentInstance as ne, computed as u, defineComponent as E, defineAsyncComponent as S, ref as C, onMounted as ae, useSlots as H, openBlock as a, createElementBlock as y, normalizeClass as w, normalizeStyle as K, createElementVNode as A, createCommentVNode as r, renderSlot as V, createBlock as f, unref as b, resolveDynamicComponent as L, withDirectives as le, mergeProps as G, toHandlers as re, vModelDynamic as ie, createTextVNode as J, toDisplayString as Q, withModifiers as W, withCtx as O, createVNode as D, useAttrs as se, onBeforeMount as ue, TransitionGroup as de, Fragment as ce, renderList as fe, withKeys as N } from "vue";
import '../assets/MazInputTags.css';function U(p) {
  return !!p;
}
function pe({
  componentName: p,
  providedId: l
}) {
  const o = ne();
  return u(() => l ?? `${p}-${o == null ? void 0 : o.uid}`);
}
function me(p, l) {
  let o;
  return function(...c) {
    clearTimeout(o), o = setTimeout(() => {
      p.apply(this, c);
    }, l);
  };
}
const ve = {
  key: 0,
  class: "m-input-wrapper-left"
}, be = { class: "m-input-wrapper-input" }, ye = ["id", "type", "name", "inputmode", "placeholder", "aria-label", "disabled", "readonly", "required"], ge = { key: 0 }, he = {
  key: 1,
  class: "m-input-wrapper-right"
}, ze = /* @__PURE__ */ E({
  inheritAttrs: !1,
  __name: "MazInput",
  props: {
    style: { default: void 0 },
    class: { default: void 0 },
    modelValue: { default: void 0 },
    placeholder: { default: void 0 },
    label: { default: void 0 },
    name: { default: void 0 },
    color: { default: "primary" },
    type: { default: "text" },
    required: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    id: { default: void 0 },
    error: { type: Boolean, default: !1 },
    success: { type: Boolean, default: !1 },
    warning: { type: Boolean, default: !1 },
    hint: { default: void 0 },
    inputClasses: { default: void 0 },
    noBorder: { type: Boolean, default: !1 },
    noRadius: { type: Boolean, default: !1 },
    inputmode: { default: "text" },
    size: { default: "md" },
    debounce: { type: [Boolean, Number], default: !1 },
    debounceDelay: { default: 500 },
    validButton: { type: Boolean, default: !1 },
    validButtonLoading: { type: Boolean, default: !1 },
    autoFocus: { type: Boolean, default: !1 },
    borderActive: { type: Boolean, default: !1 },
    leftIcon: { type: [String, Function, Object], default: void 0 },
    rightIcon: { type: [String, Function, Object], default: void 0 },
    roundedSize: { default: void 0 },
    block: { type: Boolean }
  },
  emits: ["update:model-value", "focus", "blur", "click", "change"],
  setup(p, { emit: l }) {
    const o = p, c = l, z = S(() => Promise.resolve().then(() => Ie)), h = S(() => import("./MazIcon-BDGxCy9M.mjs")), g = S(() => import("./eye-slash-tjfxO0LK.mjs")), v = S(() => import("./eye-DqO_Jx56.mjs")), M = S(() => import("./check-CL-vqe79.mjs")), m = C(!1), k = C(!1), F = C(), $ = pe({
      componentName: "MazInput",
      providedId: o.id
    });
    ae(() => {
      var e;
      o.autoFocus && ((e = F.value) == null || e.focus());
    });
    const T = u(() => o.type === "password"), n = u(() => m.value ? "text" : o.type), i = u(() => {
      if (!o.noBorder) {
        if (o.error)
          return "maz-border-danger";
        if (o.success)
          return "maz-border-success";
        if (o.warning)
          return "maz-border-warning";
        if (k.value || o.borderActive) {
          if (o.color === "black")
            return "maz-border-black";
          if (o.color === "danger")
            return "maz-border-danger";
          if (o.color === "info")
            return "maz-border-info";
          if (o.color === "primary")
            return "maz-border-primary";
          if (o.color === "secondary")
            return "maz-border-secondary";
          if (o.color === "success")
            return "maz-border-success";
          if (o.color === "warning")
            return "maz-border-warning";
          if (o.color === "white")
            return "maz-border-white";
        }
        return "--default-border";
      }
    }), s = H(), d = u(() => {
      const { required: e, placeholder: I } = o;
      if (I)
        return e ? `${I} *` : I;
    }), t = u(() => P.value !== void 0 && P.value !== ""), B = me(
      (e) => {
        c("update:model-value", e);
      },
      typeof o.debounce == "number" ? o.debounce : o.debounceDelay ?? 500
    );
    function q(e) {
      if (o.debounce)
        return B(e);
      c("update:model-value", e);
    }
    const P = u({
      get: () => o.modelValue,
      set: (e) => q(e)
    }), Y = u(() => (!!o.label || !!o.hint) && (k.value || !!t.value || !!o.placeholder || ["date", "month", "week"].includes(o.type))), Z = u(() => !!o.label || !!o.hint);
    function _() {
      return !!s["right-icon"] || T.value || !!s["valid-button"] || o.validButton || !!o.rightIcon;
    }
    function x() {
      return !!s["left-icon"] || !!o.leftIcon;
    }
    function ee(e) {
      c("focus", e), k.value = !0;
    }
    function oe(e) {
      c("blur", e), k.value = !1;
    }
    function te(e) {
      return c("change", e);
    }
    return (e, I) => (a(), y(
      "div",
      {
        class: w(["m-input", [
          {
            "--is-focused": k.value || e.borderActive,
            "--should-up": Y.value,
            "--has-label": Z.value,
            "--is-disabled": e.disabled,
            "--is-readonly": e.readonly,
            "--has-z-2": e.error || e.warning || e.success,
            "--has-state": e.error || e.warning || e.success,
            "--block": e.block
          },
          o.class,
          `--${e.color}`,
          `--${e.size}`
        ]]),
        style: K(e.style)
      },
      [
        A(
          "div",
          {
            class: w(["m-input-wrapper", [
              e.inputClasses,
              i.value,
              e.roundedSize ? `--rounded-${e.roundedSize}` : { "maz-rounded": !e.noRadius }
            ]])
          },
          [
            x() ? (a(), y("div", ve, [
              r(`
          @slot left-icon - The icon to display on the left of the input
        `),
              e.$slots["left-icon"] || e.leftIcon ? V(e.$slots, "left-icon", { key: 0 }, () => [
                typeof e.leftIcon == "string" ? (a(), f(b(h), {
                  key: 0,
                  name: e.leftIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])) : e.leftIcon ? (a(), f(L(e.leftIcon), {
                  key: 1,
                  class: "maz-text-xl maz-text-muted"
                })) : r("v-if", !0)
              ], !0) : r("v-if", !0)
            ])) : r("v-if", !0),
            A("div", be, [
              le(A("input", G({
                id: b($),
                ref_key: "input",
                ref: F,
                "onUpdate:modelValue": I[0] || (I[0] = (j) => P.value = j),
                type: n.value,
                name: e.name
              }, e.$attrs, {
                inputmode: e.inputmode,
                placeholder: d.value,
                "aria-label": e.label || e.placeholder,
                disabled: e.disabled,
                readonly: e.readonly,
                required: e.required,
                class: "m-input-input"
              }, re({
                blur: oe,
                focus: ee,
                change: te
              }, !0), {
                onClick: I[1] || (I[1] = (j) => e.$emit("click", j))
              }), null, 16, ye), [
                [ie, P.value]
              ]),
              e.label || e.hint ? (a(), y(
                "span",
                {
                  key: 0,
                  class: w(["m-input-label", [
                    {
                      "maz-text-danger-600": e.error,
                      "maz-text-success-600": e.success,
                      "maz-text-warning-600": e.warning
                    }
                  ]])
                },
                [
                  J(
                    Q(e.hint || e.label) + " ",
                    1
                    /* TEXT */
                  ),
                  e.required ? (a(), y("sup", ge, "*")) : r("v-if", !0)
                ],
                2
                /* CLASS */
              )) : r("v-if", !0)
            ]),
            _() ? (a(), y("div", he, [
              r(`
          @slot right-icon - The icon to display on the right of the input
        `),
              e.$slots["right-icon"] || e.rightIcon ? V(e.$slots, "right-icon", { key: 0 }, () => [
                typeof e.rightIcon == "string" ? (a(), f(b(h), {
                  key: 0,
                  name: e.rightIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])) : e.rightIcon ? (a(), f(L(e.rightIcon), {
                  key: 1,
                  class: "maz-text-xl maz-text-muted"
                })) : r("v-if", !0)
              ], !0) : r("v-if", !0),
              T.value ? (a(), f(b(z), {
                key: 1,
                color: "transparent",
                tabindex: "-1",
                size: "mini",
                onClick: I[2] || (I[2] = W((j) => m.value = !m.value, ["stop"]))
              }, {
                default: O(() => [
                  m.value ? (a(), f(b(g), {
                    key: 0,
                    class: "maz-text-xl maz-text-muted"
                  })) : (a(), f(b(v), {
                    key: 1,
                    class: "maz-text-xl maz-text-muted"
                  }))
                ]),
                _: 1
                /* STABLE */
              })) : r("v-if", !0),
              r(`
          @slot valid-button - Replace the valid button by your own
        `),
              e.$slots["valid-button"] || e.validButton ? V(e.$slots, "valid-button", { key: 2 }, () => [
                D(b(z), {
                  color: "transparent",
                  disabled: e.disabled,
                  tabindex: "-1",
                  loading: e.validButtonLoading,
                  class: "m-input-valid-button",
                  size: "mini",
                  type: "submit"
                }, {
                  default: O(() => [
                    D(b(M), { class: "maz-text-2xl maz-text-normal" })
                  ]),
                  _: 1
                  /* STABLE */
                }, 8, ["disabled", "loading"])
              ], !0) : r("v-if", !0)
            ])) : r("v-if", !0)
          ],
          2
          /* CLASS */
        )
      ],
      6
      /* CLASS, STYLE */
    ));
  }
}), R = (p, l) => {
  const o = p.__vccOpts || p;
  for (const [c, z] of l)
    o[c] = z;
  return o;
}, ke = /* @__PURE__ */ R(ze, [["__scopeId", "data-v-e9affc48"]]), Be = /* @__PURE__ */ E({
  __name: "MazBtn",
  props: {
    variant: { default: "button" },
    size: { default: "md" },
    color: { default: "primary" },
    type: { default: "button" },
    rounded: { type: Boolean },
    roundedSize: { default: "lg" },
    noRounded: { type: Boolean },
    outline: { type: Boolean },
    pastel: { type: Boolean },
    block: { type: Boolean },
    noUnderline: { type: Boolean },
    loading: { type: Boolean },
    disabled: { type: Boolean },
    fab: { type: Boolean },
    icon: { type: [String, Function, Object], default: void 0 },
    leftIcon: { type: [String, Function, Object], default: void 0 },
    rightIcon: { type: [String, Function, Object], default: void 0 },
    noPadding: { type: Boolean },
    noElevation: { type: Boolean },
    contentClass: { default: void 0 }
  },
  setup(p) {
    const l = p, o = S(() => import("./MazSpinner-DjR5FVqo.mjs")), c = S(() => import("./MazIcon-BDGxCy9M.mjs")), { href: z, to: h } = se(), g = H();
    ue(() => {
      l.icon && !l.fab && console.error('[maz-ui](MazBtn) the prop "icon" must be used only with "fab" props');
    });
    const v = u(() => z ? "a" : h ? "router-link" : "button"), M = u(
      () => l.pastel ? `--${l.color}-pastel` : l.outline ? `--${l.color}-outline` : `--${l.color}`
    ), m = u(
      () => (l.loading || l.disabled) && v.value === "button"
    ), k = u(() => m.value ? "--cursor-default" : "--cursor-pointer"), F = u(() => `--is-${l.variant}`), $ = u(() => l.loading && l.variant === "button"), T = u(() => !!g["left-icon"] || l.leftIcon), n = u(() => !!g["right-icon"] || l.rightIcon), i = u(() => T.value || n.value), s = u(() => l.fab && (l.icon || !!g.icon)), d = u(() => v.value === "button" ? l.type : void 0);
    return (t, B) => (a(), f(L(v.value), {
      disabled: m.value || void 0,
      class: w(["m-btn", [
        `--${t.size}`,
        !t.fab && t.roundedSize && `--rounded-${t.roundedSize}`,
        M.value,
        k.value,
        F.value,
        {
          "--block": t.block,
          "--no-underline": t.noUnderline,
          "--fab": t.fab,
          "--loading": t.loading,
          "--disabled": m.value,
          "--icon": i.value,
          "--rounded": t.rounded,
          "--no-rounded": t.noRounded,
          "--no-padding": t.noPadding,
          "--no-elevation": t.noElevation
        }
      ]]),
      type: d.value
    }, {
      default: O(() => [
        T.value ? (a(), y(
          "div",
          {
            key: 0,
            class: w(["m-btn__icon-left maz-flex maz-flex-center", { "maz-invisible": $.value }])
          },
          [
            r(`
        @slot left-icon - The icon to display on the left of the button
      `),
            V(t.$slots, "left-icon", {}, () => [
              typeof t.leftIcon == "string" ? (a(), f(b(c), {
                key: 0,
                name: t.leftIcon
              }, null, 8, ["name"])) : t.leftIcon ? (a(), f(L(t.leftIcon), { key: 1 })) : r("v-if", !0)
            ], !0)
          ],
          2
          /* CLASS */
        )) : r("v-if", !0),
        s.value ? (a(), y(
          "div",
          {
            key: 1,
            class: w(["m-btn__icon", { "maz-invisible": $.value }])
          },
          [
            r(`
        @slot icon - The icon to display on the fab button
      `),
            V(t.$slots, "icon", {}, () => [
              typeof t.icon == "string" ? (a(), f(b(c), {
                key: 0,
                name: t.icon
              }, null, 8, ["name"])) : t.icon ? (a(), f(L(t.icon), { key: 1 })) : r("v-if", !0)
            ], !0)
          ],
          2
          /* CLASS */
        )) : r("v-if", !0),
        t.$slots.default ? (a(), y(
          "span",
          {
            key: 2,
            class: w([{ "maz-invisible": $.value }, t.contentClass])
          },
          [
            r(`
        @slot default - The content of the button
      `),
            V(t.$slots, "default", {}, void 0, !0)
          ],
          2
          /* CLASS */
        )) : r("v-if", !0),
        n.value ? (a(), y(
          "div",
          {
            key: 3,
            class: w(["m-btn__icon-right", { "maz-invisible": $.value }])
          },
          [
            r(`
        @slot right-icon - The icon to display on the right of the button
      `),
            V(t.$slots, "right-icon", {}, () => [
              typeof t.rightIcon == "string" ? (a(), f(b(c), {
                key: 0,
                name: t.rightIcon
              }, null, 8, ["name"])) : t.rightIcon ? (a(), f(L(t.rightIcon), { key: 1 })) : r("v-if", !0)
            ], !0)
          ],
          2
          /* CLASS */
        )) : r("v-if", !0),
        $.value ? (a(), f(b(o), {
          key: 4,
          class: "m-btn-loader",
          size: "2em",
          color: t.color
        }, null, 8, ["color"])) : r("v-if", !0)
      ]),
      _: 3
      /* FORWARDED */
    }, 8, ["disabled", "class", "type"]));
  }
}), X = /* @__PURE__ */ R(Be, [["__scopeId", "data-v-48f14785"]]), Ie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: X
}, Symbol.toStringTag, { value: "Module" })), $e = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "none",
  viewBox: "0 0 24 24"
}, we = /* @__PURE__ */ A(
  "path",
  {
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "1.5",
    d: "m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"
  },
  null,
  -1
  /* HOISTED */
), Te = [
  we
];
function Ce(p, l) {
  return a(), y("svg", $e, [...Te]);
}
const Me = { render: Ce }, Se = /* @__PURE__ */ E({
  inheritAttrs: !1,
  __name: "MazInputTags",
  props: {
    style: { default: void 0 },
    class: { default: void 0 },
    modelValue: { default: void 0 },
    placeholder: { default: void 0 },
    label: { default: void 0 },
    disabled: { type: Boolean, default: !1 },
    error: { type: Boolean, default: !1 },
    success: { type: Boolean, default: !1 },
    warning: { type: Boolean, default: !1 },
    size: { default: "md" },
    color: { default: "primary" },
    block: { type: Boolean },
    addTagsOnBlur: { type: Boolean, default: !0 }
  },
  emits: ["update:model-value"],
  setup(p, { emit: l }) {
    const o = p, c = l, z = C(!1), h = C(), g = C(), v = C(), M = C(), m = u(
      () => {
        var n;
        return (n = o.modelValue) == null ? void 0 : n.map((i) => ({
          tag: i,
          id: Math.random().toString(36).slice(2, 11)
        }));
      }
    );
    function k(n) {
      if (h.value) {
        v.value = void 0, n.preventDefault();
        const s = h.value.trim().split(",").map((d) => d.trim() === "," ? void 0 : d.trim()).filter(U).filter(
          (d) => {
            var t, B;
            return !((B = (t = o.modelValue) == null ? void 0 : t.filter(U)) != null && B.some((q) => q === d));
          }
        );
        c(
          "update:model-value",
          o.modelValue ? [...o.modelValue, ...s] : [...s]
        ), h.value = void 0;
      }
    }
    const F = u(() => {
      if (o.error)
        return "maz-border-danger";
      if (o.success)
        return "maz-border-success";
      if (o.warning)
        return "maz-border-warning";
      if (z.value) {
        if (o.color === "primary")
          return "maz-border-primary";
        if (o.color === "secondary")
          return "maz-border-secondary";
        if (o.color === "info")
          return "maz-border-info";
        if (o.color === "danger")
          return "maz-border-danger";
        if (o.color === "success")
          return "maz-border-success";
        if (o.color === "warning")
          return "maz-border-warning";
        if (o.color === "black")
          return "maz-border-black";
        if (o.color === "white")
          return "maz-border-white";
      }
      return "maz-border-border dark:maz-border-color-lighter";
    });
    function $() {
      var n, i, s;
      h.value || m.value && ((n = m.value) == null ? void 0 : n.length) === 0 || (M.value && clearTimeout(M.value), v.value ? (T(v.value), v.value = void 0) : (v.value = (s = (i = m.value) == null ? void 0 : i[m.value.length - 1]) == null ? void 0 : s.id, M.value = setTimeout(() => {
        v.value = void 0;
      }, 2e3)));
    }
    function T(n) {
      var s;
      const i = (s = m.value) == null ? void 0 : s.filter((d) => d.id !== n).map((d) => d.tag);
      c("update:model-value", i);
    }
    return (n, i) => (a(), y(
      "div",
      {
        class: w(["m-input-tags", [F.value, `--${n.color}`, `--${n.size}`, o.class, { "--block": n.block }]]),
        style: K(n.style),
        onFocusCapture: i[4] || (i[4] = (s) => z.value = !0),
        onBlurCapture: i[5] || (i[5] = (s) => z.value = !1)
      },
      [
        D(de, { name: "maz-tags" }, {
          default: O(() => [
            (a(!0), y(
              ce,
              null,
              fe(m.value, ({ tag: s, id: d }, t) => (a(), y("div", {
                key: `tag-${t}`,
                class: "m-input-tags__wrapper"
              }, [
                D(X, {
                  class: "m-input-tags__tag",
                  disabled: n.disabled,
                  size: n.size,
                  color: g.value === d || v.value === d ? "danger" : n.color,
                  onClick: W((B) => T(d), ["stop"]),
                  onMouseenter: (B) => g.value = d,
                  onFocus: (B) => g.value = d,
                  onMouseleave: i[0] || (i[0] = (B) => g.value = void 0),
                  onBlur: i[1] || (i[1] = (B) => g.value = void 0)
                }, {
                  "right-icon": O(() => [
                    g.value === d || v.value === d ? (a(), f(b(Me), { key: 0 })) : r("v-if", !0)
                  ]),
                  default: O(() => [
                    J(
                      Q(s) + " ",
                      1
                      /* TEXT */
                    )
                  ]),
                  _: 2
                  /* DYNAMIC */
                }, 1032, ["disabled", "size", "color", "onClick", "onMouseenter", "onFocus"])
              ]))),
              128
              /* KEYED_FRAGMENT */
            ))
          ]),
          _: 1
          /* STABLE */
        }),
        D(ke, G({
          key: "input-tags",
          modelValue: h.value,
          "onUpdate:modelValue": i[2] || (i[2] = (s) => h.value = s)
        }, n.$attrs, {
          placeholder: n.placeholder,
          label: n.label,
          "aria-label": n.label || n.placeholder,
          error: n.error,
          disabled: n.disabled,
          color: n.color,
          block: n.block,
          size: n.size,
          "no-border": "",
          class: "m-input-tags__input",
          onKeydown: [
            N(k, ["enter"]),
            N($, ["delete"])
          ],
          onBlur: i[3] || (i[3] = (s) => n.addTagsOnBlur ? k(s) : void 0)
        }), null, 16, ["modelValue", "placeholder", "label", "aria-label", "error", "disabled", "color", "block", "size"])
      ],
      38
      /* CLASS, STYLE, NEED_HYDRATION */
    ));
  }
}), Fe = /* @__PURE__ */ R(Se, [["__scopeId", "data-v-2915bccf"]]);
export {
  Fe as M,
  R as _
};

import { getCurrentInstance as Y, computed as Z, nextTick as x, defineComponent as ee, defineAsyncComponent as A, ref as I, watch as L, resolveComponent as oe, withDirectives as T, openBlock as v, createElementBlock as h, unref as u, normalizeClass as k, normalizeStyle as ne, createElementVNode as C, withModifiers as D, renderSlot as p, createTextVNode as E, toDisplayString as $, createCommentVNode as b, createVNode as U, mergeProps as te, withCtx as B, createBlock as N, Transition as le, Fragment as S, renderList as se, vShow as re } from "vue";
import './assets/MazDropdown.css';function ae({
  componentName: t,
  providedId: l
}) {
  const n = Y();
  return Z(() => l ?? `${t}-${n == null ? void 0 : n.uid}`);
}
function ie(t, l) {
  let n;
  return function(...c) {
    clearTimeout(n), n = setTimeout(() => {
      t.apply(this, c);
    }, l);
  };
}
const M = "__maz-click-outside__";
function F() {
  return document.ontouchstart === null ? "touchstart" : "click";
}
async function V(t, l) {
  try {
    R(t);
    const n = l.instance, c = l.value, w = typeof c == "function";
    if (!w)
      throw new Error("[maz-ui](vClickOutside) the callback should be a function");
    await x(), t[M] = (f) => {
      if ((!t || f.target && !t.contains(f.target)) && c && w)
        return c.call(n, f);
    };
    const z = F();
    document.addEventListener(z, t[M], { passive: !0 });
  } catch (n) {
    console.error("[maz-ui](vClickOutside)", n);
  }
}
function R(t) {
  try {
    const l = F();
    document.removeEventListener(l, t[M], !1), delete t[M];
  } catch (l) {
    console.error("[maz-ui](vClickOutside)", l);
  }
}
function ue(t, l) {
  try {
    if (l.value === l.oldValue)
      return;
    V(t, l);
  } catch (n) {
    console.error("[maz-ui](vClickOutside)", n);
  }
}
const de = {
  mounted: V,
  updated: ue,
  unmounted: R
}, ce = ["id"], fe = ["aria-expanded"], pe = ["id"], me = { class: "button-span" }, ve = ["target", "href"], be = ["onClick"], ye = /* @__PURE__ */ ee({
  inheritAttrs: !1,
  __name: "MazDropdown",
  props: {
    style: { default: void 0 },
    class: { default: void 0 },
    items: { default: () => [] },
    open: { type: Boolean },
    id: { default: void 0 },
    trigger: { default: "both" },
    color: { default: "transparent" },
    position: { default: "bottom left" },
    noCloseOnClick: { type: Boolean },
    disabled: { type: Boolean },
    noChevron: { type: Boolean },
    screenReaderDescription: { default: "Open menu dropdown" }
  },
  emits: [
    /**
     * emitted when a menu item is clicked
     */
    "menuitem-clicked",
    /**
     * Triggers when the number changes
     *
     * @property {boolean} open new value
     */
    "update:open"
  ],
  setup(t, { emit: l }) {
    const n = t, c = l, w = A(() => import("./chunks/MazBtn-BQ7aH6Qe.mjs").then((e) => e.M)), z = A(() => import("./chunks/chevron-down-CzMH-gFW.mjs")), f = ae({
      componentName: "MazDropdown",
      providedId: n.id
    }), a = I(n.open), r = I(), m = ie((e) => {
      i(e);
    }, 200);
    function q() {
      a.value && i(!1);
    }
    function H() {
      i(!a.value);
    }
    function _() {
      ["click"].includes(n.trigger) && H();
    }
    function j() {
      ["hover", "both"].includes(n.trigger) && i(!0);
    }
    function K() {
      ["hover", "both"].includes(n.trigger) && (a.value === !1 ? i(!0) : m(!0));
    }
    function P() {
      ["hover", "both"].includes(n.trigger) && m(!1);
    }
    function Q() {
      m(!1);
    }
    function i(e) {
      n.disabled || (a.value = e, c("update:open", e));
    }
    async function G(e, s) {
      var d;
      c("menuitem-clicked", s), await ((d = e.action) == null ? void 0 : d.call(e)), n.noCloseOnClick || y();
    }
    function y() {
      n.noCloseOnClick === !1 && i(!1);
    }
    function O(e) {
      e.key === "Escape" ? (e.preventDefault(), i(!1)) : ["ArrowDown", "ArrowUp"].includes(e.key) ? W(e) : e.key === "Enter" && typeof r.value == "number" && (e.preventDefault(), document.querySelectorAll(`#${f.value} .menuitem`)[r.value].click(), y());
    }
    function J(e) {
      ["ArrowDown", "ArrowUp", "Enter"].includes(e.key) && a.value === !1 && (e.preventDefault(), i(!0));
    }
    function W(e) {
      var o;
      e.preventDefault();
      const s = e.key;
      a.value || i(!0);
      const d = (o = n.items) == null ? void 0 : o.length;
      d && (typeof r.value == "number" ? r.value === d - 1 && s === "ArrowDown" ? r.value = 0 : r.value === 0 && s === "ArrowUp" ? r.value = d - 1 : r.value = s === "ArrowDown" ? r.value + 1 : r.value - 1 : r.value = s === "ArrowDown" ? 0 : d - 1);
    }
    return L(
      () => a.value,
      (e) => {
        e ? document.addEventListener("keydown", O) : document.removeEventListener("keydown", O), r.value = void 0;
      }
    ), L(
      () => n.open,
      (e) => i(e)
    ), (e, s) => {
      const d = oe("RouterLink");
      return T((v(), h("div", {
        id: u(f),
        class: k(["m-dropdown", [n.class]]),
        style: ne(e.style)
      }, [
        C("div", {
          role: "button",
          tabindex: "0",
          class: "m-dropdown__wrapper",
          "aria-expanded": a.value,
          "aria-haspopup": "menu",
          onClick: D(_, ["stop"]),
          onFocus: j,
          onBlur: Q,
          onKeydown: J,
          onMouseenter: K,
          onMouseleave: P
        }, [
          C("span", {
            id: `${u(f)}-labelspan`,
            class: "maz-sr-only"
          }, [
            p(e.$slots, "screen-reader-description", {}, () => [
              E(
                $(e.screenReaderDescription),
                1
                /* TEXT */
              )
            ])
          ], 8, pe),
          b(`
        @slot Custom Element
          @binding {Boolen} is-open close function
          @default \`<MazBtn />\`
      `),
          p(e.$slots, "element", { isOpen: a.value }, () => [
            U(u(w), te({
              color: e.color,
              disabled: e.disabled,
              "aria-labelledby": `${u(f)}-labelspan`
            }, e.$attrs, { tabindex: "-1" }), {
              default: B(() => [
                C("span", me, [
                  b(" @slot Button text "),
                  p(e.$slots, "default"),
                  e.noChevron ? b("v-if", !0) : (v(), N(u(z), {
                    key: 0,
                    class: k([{ "maz-rotate-180": a.value }, "chevron-icon"])
                  }, null, 8, ["class"]))
                ]),
                b(" @slot Menu Label ")
              ]),
              _: 3
              /* FORWARDED */
            }, 16, ["color", "disabled", "aria-labelledby"])
          ])
        ], 40, fe),
        U(le, {
          name: "maz-scale-fade",
          persisted: ""
        }, {
          default: B(() => [
            T(C(
              "div",
              {
                role: "menu",
                "aria-label": "Menu",
                class: k(["menu", {
                  "--top": e.position.includes("top"),
                  "--left": e.position.includes("left"),
                  "--right": e.position.includes("right"),
                  "--bottom": e.position.includes("bottom")
                }]),
                tabindex: "-1",
                onFocus: s[0] || (s[0] = (o) => u(m)(!0)),
                onBlur: s[1] || (s[1] = (o) => u(m)(!1)),
                onMouseenter: s[2] || (s[2] = (o) => ["hover", "both"].includes(e.trigger) ? u(m)(!0) : void 0),
                onMouseleave: s[3] || (s[3] = (o) => ["hover", "both"].includes(e.trigger) ? u(m)(!1) : void 0)
              },
              [
                b(`
          @slot Custom dropdown panel
            @binding {Array} items - items prop data
        `),
                p(e.$slots, "dropdown", { items: e.items }, () => [
                  (v(!0), h(
                    S,
                    null,
                    se(e.items, (o, g) => (v(), h(
                      S,
                      { key: g },
                      [
                        b(`
              @slot Custom menu item
                @binding {Object} item - menu item
            `),
                        p(e.$slots, "menuitem", { item: o }, () => [
                          o.to ? (v(), N(d, {
                            key: 0,
                            target: o.href ? o.target ?? "_self" : void 0,
                            to: o.to,
                            class: k(["menuitem", [
                              {
                                "--is-keyboard-selected": r.value === g
                              },
                              o.class
                            ]]),
                            tabindex: "-1",
                            onClick: D(y, ["stop"])
                          }, {
                            default: B(() => [
                              p(e.$slots, "menuitem-label", { item: o }, () => [
                                E(
                                  $(o.label),
                                  1
                                  /* TEXT */
                                )
                              ])
                            ]),
                            _: 2
                            /* DYNAMIC */
                          }, 1032, ["target", "to", "class"])) : o.href ? (v(), h("a", {
                            key: 1,
                            target: o.href ? o.target ?? "_self" : void 0,
                            href: o.href,
                            tabindex: "-1",
                            class: k(["menuitem", [
                              {
                                "--is-keyboard-selected": r.value === g
                              },
                              o.class
                            ]]),
                            onClick: D(y, ["stop"])
                          }, [
                            p(e.$slots, "menuitem-label", { item: o }, () => [
                              E(
                                $(o.label),
                                1
                                /* TEXT */
                              )
                            ])
                          ], 10, ve)) : o.action ? (v(), h("button", {
                            key: 2,
                            tabindex: "-1",
                            type: "button",
                            class: k(["menuitem", [
                              {
                                "--is-keyboard-selected": r.value === g
                              },
                              o.class
                            ]]),
                            onClick: D((X) => o.action ? G(o, X) : y(), ["stop"])
                          }, [
                            p(e.$slots, "menuitem-label", { item: o }, () => [
                              E(
                                $(o.label),
                                1
                                /* TEXT */
                              )
                            ])
                          ], 10, be)) : b("v-if", !0)
                        ])
                      ],
                      64
                      /* STABLE_FRAGMENT */
                    ))),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ])
              ],
              34
              /* CLASS, NEED_HYDRATION */
            ), [
              [re, a.value]
            ])
          ]),
          _: 3
          /* FORWARDED */
        })
      ], 14, ce)), [
        [u(de), q]
      ]);
    };
  }
});
export {
  ye as default
};

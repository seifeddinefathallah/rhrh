interface MazUiConfig {
    outputCssFilePath: string;
    theme: {
        colors: {
            primary?: string;
            secondary?: string;
            info?: string;
            danger?: string;
            success?: string;
            warning?: string;
            bgOverlay?: string;
            lightTheme?: {
                textColor?: string;
                colorMuted?: string;
                bgColor?: string;
            };
            darkTheme?: {
                textColor?: string;
                colorMuted?: string;
                bgColor?: string;
            };
        };
        borderColor?: string;
        borderWidth?: string;
        borderRadius?: string;
        fontFamily?: string;
    };
}
type VariantColor = keyof Omit<MazUiConfig['theme']['colors'], 'bgOverlay' | 'lightTheme' | 'darkTheme'>;
interface OutputColorVariant {
    '50': string;
    '100': string;
    '200': string;
    '300': string;
    '400': string;
    'base': string;
    '600': string;
    '700': string;
    '800': string;
    '900': string;
    'contrast': string;
    'alpha': string;
    'alpha-20': string;
    'alpha-10': string;
    'alpha-05': string;
}
type VariantColors = Record<VariantColor, OutputColorVariant>;

declare function defineConfig(mazUiConfig: MazUiConfig): MazUiConfig;

export { type MazUiConfig, type OutputColorVariant, type VariantColor, type VariantColors, defineConfig };

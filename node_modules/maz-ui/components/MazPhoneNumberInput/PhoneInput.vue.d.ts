import type { Color, Size, Translations } from '../MazPhoneNumberInput.vue';
declare let __VLS_typeProps: {
    id: string;
    color: Color;
    size: Size;
    locales: Translations;
    label?: string;
    placeholder?: string;
    noExample?: boolean;
    disabled?: boolean;
    hasRadius?: boolean;
    success?: boolean;
    error?: boolean;
    autoFormat?: boolean;
    noFormattingAsYouType?: boolean;
};
type __VLS_PublicProps = {
    modelValue?: string;
} & typeof __VLS_typeProps;
declare const _default: import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<__VLS_PublicProps>, {
    class: undefined;
    style: undefined;
    label: undefined;
    placeholder: undefined;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "update:modelValue": (modelValue: string) => void;
    "update:model-value": (phoneNumber?: string | undefined) => void;
}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<__VLS_PublicProps>, {
    class: undefined;
    style: undefined;
    label: undefined;
    placeholder: undefined;
}>>> & {
    "onUpdate:modelValue"?: ((modelValue: string) => any) | undefined;
    "onUpdate:model-value"?: ((phoneNumber?: string | undefined) => any) | undefined;
}, {
    label: string;
    placeholder: string;
}, {}>;
export default _default;
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToOption<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};

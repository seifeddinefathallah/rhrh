import { openBlock as r, createElementBlock as y, createElementVNode as B, getCurrentInstance as xe, computed as p, defineComponent as x, defineAsyncComponent as Z, ref as P, onMounted as et, useSlots as Oe, normalizeClass as V, normalizeStyle as ie, createCommentVNode as d, renderSlot as S, createBlock as I, unref as b, resolveDynamicComponent as pe, withDirectives as He, mergeProps as Pe, toHandlers as tt, vModelDynamic as ot, createTextVNode as re, toDisplayString as Y, withModifiers as de, withCtx as O, createVNode as M, useCssVars as we, onBeforeMount as Le, nextTick as Be, Transition as lt, Fragment as ve, renderList as ke, useAttrs as at, inject as nt, pushScopeId as Ue, popScopeId as qe, toRefs as st, provide as rt, watch as ge } from "vue";
import '../assets/MazTable.css';const it = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "none",
  viewBox: "0 0 24 24"
}, ut = /* @__PURE__ */ B(
  "path",
  {
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "1.5",
    d: "m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607"
  },
  null,
  -1
  /* HOISTED */
), ct = [
  ut
];
function Re(u, n) {
  return r(), y("svg", it, [...ct]);
}
const Qe = { render: Re }, dt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Qe,
  render: Re
}, Symbol.toStringTag, { value: "Module" })), pt = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "none",
  viewBox: "0 0 24 24"
}, ft = /* @__PURE__ */ B(
  "path",
  {
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "1.5",
    d: "M4.5 10.5 12 3m0 0 7.5 7.5M12 3v18"
  },
  null,
  -1
  /* HOISTED */
), mt = [
  ft
];
function vt(u, n) {
  return r(), y("svg", pt, [...mt]);
}
const bt = { render: vt }, ht = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "none",
  viewBox: "0 0 24 24"
}, yt = /* @__PURE__ */ B(
  "path",
  {
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "1.5",
    d: "M15.75 19.5 8.25 12l7.5-7.5"
  },
  null,
  -1
  /* HOISTED */
), gt = [
  yt
];
function zt(u, n) {
  return r(), y("svg", ht, [...gt]);
}
const je = { render: zt }, kt = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "none",
  viewBox: "0 0 24 24"
}, $t = /* @__PURE__ */ B(
  "path",
  {
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "1.5",
    d: "m18.75 4.5-7.5 7.5 7.5 7.5m-6-15L5.25 12l7.5 7.5"
  },
  null,
  -1
  /* HOISTED */
), wt = [
  $t
];
function St(u, n) {
  return r(), y("svg", kt, [...wt]);
}
const De = { render: St };
function Ne({
  componentName: u,
  providedId: n
}) {
  const e = xe();
  return p(() => n ?? `${u}-${e == null ? void 0 : e.uid}`);
}
let Ce = null;
function It(u, n) {
  Ce && clearTimeout(Ce), Ce = setTimeout(u, n);
}
const Vt = {
  removeAccents: !0,
  caseSensitive: !1,
  replaceSpaces: !0,
  removeSpecialCharacters: !1,
  trim: !0,
  normalizeSpaces: !0,
  removeNumbers: !1,
  customNormalizationForms: ["NFC", "NFKD"]
};
function $e(u, n) {
  const e = { ...Vt, ...n }, o = {
    À: "A",
    Á: "A",
    Â: "A",
    Ã: "A",
    Ä: "A",
    Å: "A",
    à: "a",
    á: "a",
    â: "a",
    ã: "a",
    ä: "a",
    å: "a",
    È: "E",
    É: "E",
    Ê: "E",
    Ë: "E",
    è: "e",
    é: "e",
    ê: "e",
    ë: "e",
    Î: "I",
    Ï: "I",
    í: "I",
    î: "i",
    ï: "i",
    Ô: "O",
    Õ: "O",
    Ö: "O",
    Ø: "O",
    ô: "o",
    õ: "o",
    ö: "o",
    ø: "o",
    Ù: "U",
    Ú: "U",
    Û: "U",
    Ü: "U",
    ù: "u",
    ú: "u",
    û: "u",
    ü: "u",
    Ç: "C",
    ç: "c",
    ÿ: "y",
    Ñ: "N",
    ñ: "n",
    ó: "o"
  };
  let c = u.toString();
  if (e.trim && (c = c.trim()), e.normalizeSpaces && (c = c.replaceAll(/\s+/g, " ")), e.replaceSpaces && (c = c.replaceAll(" ", "-")), e.removeNumbers && (c = c.replaceAll(/\d/g, "")), e.removeAccents && (c = c.replaceAll(/[ÀÁÂÃÄÅÇÈÉÊËÎÏÑÔÕÖØÙÚÛÜàáâãäåçèéêëíîïñóôõöøùúûüÿ]/g, (v) => o[v] || v), c = c.replaceAll(/[\u0300-\u036F]/g, "")), e.caseSensitive === !1 && (c = c.toLowerCase()), e.removeSpecialCharacters && (c = c.replaceAll(/[^\dA-Z-]/gi, "")), e.trim && (c = c.trim()), e.customNormalizationForms)
    for (const v of e.customNormalizationForms)
      c = c.normalize(v);
  return c;
}
function Bt(u, n) {
  const e = u.length, o = n.length, c = [];
  for (let v = 0; v <= e; v++)
    c[v] = [v];
  for (let v = 0; v <= o; v++)
    c[0][v] = v;
  for (let v = 1; v <= e; v++)
    for (let C = 1; C <= o; C++) {
      const N = u[v - 1] === n[C - 1] ? 0 : 1;
      c[v][C] = Math.min(
        c[v - 1][C] + 1,
        c[v][C - 1] + 1,
        c[v - 1][C - 1] + N
      );
    }
  return c[e][o];
}
function We(u, n) {
  const e = Bt(u, n), o = Math.max(u.length, n.length);
  return 1 - e / o;
}
function Ct(u, n, e = 0.75) {
  return We(u, n) >= e;
}
function Ae(u, n, e = 0.75) {
  const o = p(
    () => $e(typeof u == "string" ? u : u.value)
  ), c = p(
    () => $e(typeof n == "string" ? n : n.value)
  ), v = p(() => typeof e == "number" ? e : e.value), C = p(() => We(o.value, c.value));
  return {
    isMatching: p(
      () => Ct(o.value, c.value, v.value)
    ),
    score: C
  };
}
function Ge(u, n, e) {
  var C;
  u.stopPropagation();
  const o = typeof e.value == "function" ? e.value : e.value.handler, c = typeof e.value == "object" ? e.value.exclude : void 0;
  let v = !1;
  if (c && c.length > 0) {
    for (const N of c)
      if (!v && u.target instanceof HTMLElement) {
        const Q = (C = document.querySelector(N)) == null ? void 0 : C.getAttribute("id");
        v = u.target.getAttribute("id") === Q;
      }
  }
  !n.contains(u.target) && !v && (o == null || o());
}
function Ye() {
  return document.ontouchstart === null ? "touchstart" : "click";
}
function At(u, n) {
  const e = Ye();
  document.removeEventListener(e, (o) => Ge(o, u, n));
}
function Mt(u, n) {
  if (typeof n.value != "function" && typeof n.value == "object" && typeof n.value.handler != "function") {
    console.error("[maz-ui](vClosable) v-closable directive requires a handler function");
    return;
  }
  const e = Ye();
  document.addEventListener(e, (o) => Ge(o, u, n));
}
const _t = {
  mounted: Mt,
  unmounted: At
}, ee = (u, n) => {
  const e = u.__vccOpts || u;
  for (const [o, c] of n)
    e[o] = c;
  return e;
};
function Tt(u, n) {
  let e;
  return function(...o) {
    clearTimeout(e), e = setTimeout(() => {
      u.apply(this, o);
    }, n);
  };
}
const Kt = {
  key: 0,
  class: "m-input-wrapper-left"
}, Ot = { class: "m-input-wrapper-input" }, Pt = ["id", "type", "name", "inputmode", "placeholder", "aria-label", "disabled", "readonly", "required"], Lt = { key: 0 }, Nt = {
  key: 1,
  class: "m-input-wrapper-right"
}, Et = /* @__PURE__ */ x({
  inheritAttrs: !1,
  __name: "MazInput",
  props: {
    style: { default: void 0 },
    class: { default: void 0 },
    modelValue: { default: void 0 },
    placeholder: { default: void 0 },
    label: { default: void 0 },
    name: { default: void 0 },
    color: { default: "primary" },
    type: { default: "text" },
    required: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    id: { default: void 0 },
    error: { type: Boolean, default: !1 },
    success: { type: Boolean, default: !1 },
    warning: { type: Boolean, default: !1 },
    hint: { default: void 0 },
    inputClasses: { default: void 0 },
    noBorder: { type: Boolean, default: !1 },
    noRadius: { type: Boolean, default: !1 },
    inputmode: { default: "text" },
    size: { default: "md" },
    debounce: { type: [Boolean, Number], default: !1 },
    debounceDelay: { default: 500 },
    validButton: { type: Boolean, default: !1 },
    validButtonLoading: { type: Boolean, default: !1 },
    autoFocus: { type: Boolean, default: !1 },
    borderActive: { type: Boolean, default: !1 },
    leftIcon: { type: [String, Function, Object], default: void 0 },
    rightIcon: { type: [String, Function, Object], default: void 0 },
    roundedSize: { default: void 0 },
    block: { type: Boolean }
  },
  emits: ["update:model-value", "focus", "blur", "click", "change"],
  setup(u, { emit: n }) {
    const e = u, o = n, c = Z(() => Promise.resolve().then(() => Qt)), v = Z(() => import("./MazIcon-CTjWIkTp.mjs")), C = Z(() => import("./eye-slash-tjfxO0LK.mjs")), N = Z(() => import("./eye-DqO_Jx56.mjs")), Q = Z(() => Promise.resolve().then(() => no)), _ = P(!1), k = P(!1), j = P(), A = Ne({
      componentName: "MazInput",
      providedId: e.id
    });
    et(() => {
      var a;
      e.autoFocus && ((a = j.value) == null || a.focus());
    });
    const U = p(() => e.type === "password"), z = p(() => _.value ? "text" : e.type), $ = p(() => {
      if (!e.noBorder) {
        if (e.error)
          return "maz-border-danger";
        if (e.success)
          return "maz-border-success";
        if (e.warning)
          return "maz-border-warning";
        if (k.value || e.borderActive) {
          if (e.color === "black")
            return "maz-border-black";
          if (e.color === "danger")
            return "maz-border-danger";
          if (e.color === "info")
            return "maz-border-info";
          if (e.color === "primary")
            return "maz-border-primary";
          if (e.color === "secondary")
            return "maz-border-secondary";
          if (e.color === "success")
            return "maz-border-success";
          if (e.color === "warning")
            return "maz-border-warning";
          if (e.color === "white")
            return "maz-border-white";
        }
        return "--default-border";
      }
    }), L = Oe(), W = p(() => {
      const { required: a, placeholder: K } = e;
      if (K)
        return a ? `${K} *` : K;
    }), h = p(() => X.value !== void 0 && X.value !== ""), J = Tt(
      (a) => {
        o("update:model-value", a);
      },
      typeof e.debounce == "number" ? e.debounce : e.debounceDelay ?? 500
    );
    function te(a) {
      if (e.debounce)
        return J(a);
      o("update:model-value", a);
    }
    const X = p({
      get: () => e.modelValue,
      set: (a) => te(a)
    }), G = p(() => (!!e.label || !!e.hint) && (k.value || !!h.value || !!e.placeholder || ["date", "month", "week"].includes(e.type))), D = p(() => !!e.label || !!e.hint);
    function q() {
      return !!L["right-icon"] || U.value || !!L["valid-button"] || e.validButton || !!e.rightIcon;
    }
    function H() {
      return !!L["left-icon"] || !!e.leftIcon;
    }
    function ne(a) {
      o("focus", a), k.value = !0;
    }
    function se(a) {
      o("blur", a), k.value = !1;
    }
    function oe(a) {
      return o("change", a);
    }
    return (a, K) => (r(), y(
      "div",
      {
        class: V(["m-input", [
          {
            "--is-focused": k.value || a.borderActive,
            "--should-up": G.value,
            "--has-label": D.value,
            "--is-disabled": a.disabled,
            "--is-readonly": a.readonly,
            "--has-z-2": a.error || a.warning || a.success,
            "--has-state": a.error || a.warning || a.success,
            "--block": a.block
          },
          e.class,
          `--${a.color}`,
          `--${a.size}`
        ]]),
        style: ie(a.style)
      },
      [
        B(
          "div",
          {
            class: V(["m-input-wrapper", [
              a.inputClasses,
              $.value,
              a.roundedSize ? `--rounded-${a.roundedSize}` : { "maz-rounded": !a.noRadius }
            ]])
          },
          [
            H() ? (r(), y("div", Kt, [
              d(`
          @slot left-icon - The icon to display on the left of the input
        `),
              a.$slots["left-icon"] || a.leftIcon ? S(a.$slots, "left-icon", { key: 0 }, () => [
                typeof a.leftIcon == "string" ? (r(), I(b(v), {
                  key: 0,
                  name: a.leftIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])) : a.leftIcon ? (r(), I(pe(a.leftIcon), {
                  key: 1,
                  class: "maz-text-xl maz-text-muted"
                })) : d("v-if", !0)
              ], !0) : d("v-if", !0)
            ])) : d("v-if", !0),
            B("div", Ot, [
              He(B("input", Pe({
                id: b(A),
                ref_key: "input",
                ref: j,
                "onUpdate:modelValue": K[0] || (K[0] = (E) => X.value = E),
                type: z.value,
                name: a.name
              }, a.$attrs, {
                inputmode: a.inputmode,
                placeholder: W.value,
                "aria-label": a.label || a.placeholder,
                disabled: a.disabled,
                readonly: a.readonly,
                required: a.required,
                class: "m-input-input"
              }, tt({
                blur: se,
                focus: ne,
                change: oe
              }, !0), {
                onClick: K[1] || (K[1] = (E) => a.$emit("click", E))
              }), null, 16, Pt), [
                [ot, X.value]
              ]),
              a.label || a.hint ? (r(), y(
                "span",
                {
                  key: 0,
                  class: V(["m-input-label", [
                    {
                      "maz-text-danger-600": a.error,
                      "maz-text-success-600": a.success,
                      "maz-text-warning-600": a.warning
                    }
                  ]])
                },
                [
                  re(
                    Y(a.hint || a.label) + " ",
                    1
                    /* TEXT */
                  ),
                  a.required ? (r(), y("sup", Lt, "*")) : d("v-if", !0)
                ],
                2
                /* CLASS */
              )) : d("v-if", !0)
            ]),
            q() ? (r(), y("div", Nt, [
              d(`
          @slot right-icon - The icon to display on the right of the input
        `),
              a.$slots["right-icon"] || a.rightIcon ? S(a.$slots, "right-icon", { key: 0 }, () => [
                typeof a.rightIcon == "string" ? (r(), I(b(v), {
                  key: 0,
                  name: a.rightIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])) : a.rightIcon ? (r(), I(pe(a.rightIcon), {
                  key: 1,
                  class: "maz-text-xl maz-text-muted"
                })) : d("v-if", !0)
              ], !0) : d("v-if", !0),
              U.value ? (r(), I(b(c), {
                key: 1,
                color: "transparent",
                tabindex: "-1",
                size: "mini",
                onClick: K[2] || (K[2] = de((E) => _.value = !_.value, ["stop"]))
              }, {
                default: O(() => [
                  _.value ? (r(), I(b(C), {
                    key: 0,
                    class: "maz-text-xl maz-text-muted"
                  })) : (r(), I(b(N), {
                    key: 1,
                    class: "maz-text-xl maz-text-muted"
                  }))
                ]),
                _: 1
                /* STABLE */
              })) : d("v-if", !0),
              d(`
          @slot valid-button - Replace the valid button by your own
        `),
              a.$slots["valid-button"] || a.validButton ? S(a.$slots, "valid-button", { key: 2 }, () => [
                M(b(c), {
                  color: "transparent",
                  disabled: a.disabled,
                  tabindex: "-1",
                  loading: a.validButtonLoading,
                  class: "m-input-valid-button",
                  size: "mini",
                  type: "submit"
                }, {
                  default: O(() => [
                    M(b(Q), { class: "maz-text-2xl maz-text-normal" })
                  ]),
                  _: 1
                  /* STABLE */
                }, 8, ["disabled", "loading"])
              ], !0) : d("v-if", !0)
            ])) : d("v-if", !0)
          ],
          2
          /* CLASS */
        )
      ],
      6
      /* CLASS, STYLE */
    ));
  }
}), Te = /* @__PURE__ */ ee(Et, [["__scopeId", "data-v-e9affc48"]]), jt = ["aria-label"], Dt = { class: "m-select-list__no-results" }, Ft = {
  key: 2,
  class: "m-select-list__scroll-wrapper",
  tabindex: "-1"
}, Ht = { class: "m-select-list-optgroup" }, Ut = ["onClick"], qt = /* @__PURE__ */ x({
  inheritAttrs: !1,
  __name: "MazSelect",
  props: {
    style: { default: void 0 },
    class: { default: void 0 },
    id: { default: void 0 },
    modelValue: { default: void 0 },
    options: { default: void 0 },
    optionValueKey: { default: "value" },
    optionLabelKey: { default: "label" },
    optionInputValueKey: { default: "label" },
    listPosition: { default: "bottom left" },
    itemHeight: { default: void 0 },
    maxListHeight: { default: 240 },
    maxListWidth: { default: void 0 },
    size: { default: "md" },
    color: { default: "primary" },
    search: { type: Boolean },
    searchPlaceholder: { default: "Search in options" },
    open: { type: Boolean },
    multiple: { type: Boolean, default: void 0 },
    required: { type: Boolean },
    disabled: { type: Boolean },
    block: { type: Boolean },
    excludeSelectors: { default: void 0 }
  },
  emits: ["close", "open", "blur", "focus", "change", "update:model-value", "selected-option"],
  setup(u, { expose: n, emit: e }) {
    we((t) => ({
      "792163ea": z.value,
      e9859fae: A.value,
      "42d9f8d1": U.value
    }));
    const o = u, c = e, v = Z(() => Promise.resolve().then(() => uo)), C = Z(() => Promise.resolve().then(() => dt)), N = Z(() => import("./chevron-down-CzMH-gFW.mjs")), Q = Z(() => import("./no-symbol-QAqP9IlR.mjs"));
    n({
      /** Method to open the option list */
      openList: ae,
      /** Method to close the option list */
      closeList: le
    });
    const _ = P(!1), k = P(), j = p(
      () => ["black", "transparent", "white"].includes(o.color)
    ), A = p(
      () => j.value ? "var(--maz-color-black)" : `var(--maz-color-${o.color}-800)`
    ), U = p(
      () => j.value ? "var(--maz-color-muted)" : `var(--maz-color-${o.color}-100)`
    ), z = p(
      () => j.value ? "var(--maz-color-muted)" : `var(--maz-color-${o.color}-200)`
    ), $ = p(() => _.value || o.open), L = Ne({
      componentName: "MazSelect",
      providedId: o.id
    });
    function W(t) {
      return {
        [o.optionValueKey]: t,
        [o.optionLabelKey]: t,
        [o.optionInputValueKey]: t
      };
    }
    function h(t) {
      return {
        ...t,
        [o.optionValueKey]: t[o.optionValueKey],
        [o.optionLabelKey]: t[o.optionLabelKey],
        [o.optionInputValueKey]: t[o.optionInputValueKey]
      };
    }
    const J = p(() => {
      var s;
      const t = [];
      if (!((s = o.options) != null && s.length))
        return [];
      for (const m of o.options)
        typeof m == "string" || typeof m == "number" || typeof m == "boolean" ? t.push(W(m)) : typeof m == "object" && "options" in m && Array.isArray(m.options) ? t.push(
          { label: m.label, isOptGroup: !0 },
          ...m.options.map(
            (i) => typeof i == "string" || typeof i == "number" || typeof i == "boolean" ? W(i) : h(i)
          )
        ) : t.push(h(m));
      return t;
    }), te = p(
      () => {
        var t;
        return ((t = J.value) == null ? void 0 : t.filter((s) => o.multiple ? Array.isArray(o.modelValue) ? o.modelValue.includes(s[o.optionValueKey]) && !H(s[o.optionValueKey]) : !1 : o.modelValue === s[o.optionValueKey] && !H(s[o.optionValueKey]))) ?? [];
      }
    );
    Le(() => {
      var t;
      (t = o.options) != null && t.length || console.warn("[maz-ui](MazSelect) you must provide options"), f();
    });
    const X = P(), G = P(), D = P(), q = P();
    function H(t) {
      return t == null;
    }
    function ne(t) {
      var m;
      return (((m = te.value) == null ? void 0 : m.some(
        (i) => i[o.optionValueKey] === t[o.optionValueKey]
      )) ?? !1) && !H(t[o.optionValueKey]);
    }
    const se = p(() => {
      var s;
      if (o.multiple && o.modelValue && Array.isArray(o.modelValue))
        return o.modelValue.map(
          (m) => {
            var i, w;
            return (w = (i = J.value) == null ? void 0 : i.find((F) => F[o.optionValueKey] === m)) == null ? void 0 : w[o.optionInputValueKey];
          }
        ).join(", ");
      const t = (s = J.value) == null ? void 0 : s.find(
        (m) => m[o.optionValueKey] === o.modelValue
      );
      return H(o.modelValue) || t == null ? void 0 : t[o.optionInputValueKey];
    }), oe = p(
      () => o.listPosition.includes("bottom") ? "maz-slide" : "maz-slideinvert"
    ), a = P(""), K = P("");
    function E(t, s) {
      return s && t && $e(t).includes($e(s));
    }
    function be(t) {
      var s;
      return t ? (s = J.value) == null ? void 0 : s.filter((m) => {
        const i = m[o.optionLabelKey], w = m[o.optionValueKey], F = m[o.optionInputValueKey];
        return E(i, t) || E(F, t) || E(w, t) || typeof i == "string" && Ae(i, t, 0.5).isMatching.value || typeof F == "string" && Ae(F, t, 0.5).isMatching.value || typeof w == "string" && Ae(w, t, 0.5).isMatching.value;
      }) : J.value;
    }
    const R = p(() => be(a.value));
    async function le(t) {
      var m, i;
      if (!$.value)
        return;
      if (t && ("relatedTarget" in t && ((m = X.value) != null && m.contains(t.relatedTarget)) || t.type === "keydown"))
        return t.preventDefault();
      const s = t && "relatedTarget" in t && t.relatedTarget instanceof HTMLElement && t.relatedTarget.getAttribute("id");
      if ((i = o.excludeSelectors) != null && i.includes(`#${s}`))
        return t == null ? void 0 : t.preventDefault();
      await Be(), _.value = !1, k.value = 0, c("close", t);
    }
    async function ae(t) {
      o.disabled || $.value || (t == null || t.preventDefault(), _.value = !0, await g(), c("focus", t), c("open", _.value));
    }
    function fe() {
      var t, s;
      (s = ((t = G.value) == null ? void 0 : t.$el).querySelector("input")) == null || s.focus();
    }
    function Se(t) {
      _.value ? le(t) : fe();
    }
    function he(t) {
      var s, m;
      a.value = t, (m = ((s = D.value) == null ? void 0 : s.$el).querySelector("input")) == null || m.focus();
    }
    function Ie(t) {
      var m;
      t === "Backspace" && K.value.length > 0 ? K.value = K.value.slice(0, -1) : K.value += t;
      const s = be(K.value);
      s != null && s.length && (k.value = (m = R.value) == null ? void 0 : m.findIndex(
        (i) => i[o.optionValueKey] === s[0][o.optionValueKey]
      ), typeof k.value == "number" && k.value >= 0 && g(k.value)), It(() => {
        K.value = "";
      }, 1e3);
    }
    function Ve(t) {
      const s = t.key;
      /^[\dA-Za-z\u0400-\u04FF]$/.test(s) ? (t.preventDefault(), ae(t), o.search ? he(s) : Ie(s)) : ue(t);
    }
    function ue(t) {
      const s = t.code, m = ["ArrowUp", "ArrowDown"].includes(s), i = ["Enter", "Space"].includes(s), w = s === "Escape" && $.value;
      m ? ye(t, k.value) : i ? l(t, k.value) : w && le(t);
    }
    function ye(t, s) {
      var w;
      t.preventDefault();
      const m = t.code;
      $.value || ae(t);
      const i = (w = R.value) == null ? void 0 : w.length;
      i && (typeof s == "number" ? s === i - 1 && m === "ArrowDown" ? k.value = 0 : s === 0 && m === "ArrowUp" ? k.value = i - 1 : k.value = m === "ArrowDown" ? s + 1 : s - 1 : k.value = m === "ArrowDown" ? 0 : i - 1, g(k.value));
    }
    function l(t, s) {
      var i, w, F;
      if (t.preventDefault(), !$.value)
        return ae(t);
      const m = s ? ((i = R.value) == null ? void 0 : i[s]) ?? ((w = R.value) == null ? void 0 : w[0]) : (F = R.value) == null ? void 0 : F[0];
      H(m) || T(m);
    }
    async function g(t) {
      var m, i;
      await Be(), typeof t != "number" && f();
      const s = t ?? k.value;
      if (typeof s == "number" && s >= 0) {
        const w = (m = q.value) == null ? void 0 : m.querySelectorAll(".m-select-list-item");
        (i = w == null ? void 0 : w[s]) == null || i.scrollIntoView({
          behavior: "auto",
          block: "nearest",
          inline: "start"
        });
      }
    }
    function f(t) {
      var m;
      const s = (m = R.value) == null ? void 0 : m.findIndex((i) => {
        var w, F;
        return o.multiple && Array.isArray(o.modelValue) ? t ? t[o.optionValueKey] === i[o.optionValueKey] : [...o.modelValue].reverse()[0] === i[o.optionValueKey] : ((F = (w = te.value) == null ? void 0 : w[0]) == null ? void 0 : F[o.optionValueKey]) === i[o.optionValueKey];
      });
      k.value = s && s >= 0 ? s : 0;
    }
    function T(t, s = !0) {
      var F;
      s && !o.multiple && Be(() => le()), a.value = "";
      const m = (F = te.value) == null ? void 0 : F.some(
        (ce) => ce[o.optionValueKey] === t[o.optionValueKey]
      );
      let i = te.value;
      m && o.multiple ? i = i == null ? void 0 : i.filter(
        (ce) => ce[o.optionValueKey] !== t[o.optionValueKey]
      ) : o.multiple ? i.push(t) : i = [t];
      const w = i.map((ce) => ce[o.optionValueKey]);
      c("update:model-value", o.multiple ? w : w[0]), c("selected-option", t), f(t), fe();
    }
    return (t, s) => {
      var m;
      return He((r(), y(
        "div",
        {
          ref_key: "mazSelectElement",
          ref: X,
          class: V(["m-select", [
            { "--is-open": $.value, "--disabled": t.disabled, "--block": t.block },
            o.class,
            `--${t.size}`
          ]]),
          style: ie(t.style)
        },
        [
          M(Te, Pe({
            id: b(L),
            ref_key: "mazInputComponent",
            ref: G,
            class: "m-select-input"
          }, t.$attrs, {
            required: t.required,
            "border-active": _.value,
            color: t.color,
            "model-value": se.value,
            autocomplete: "off",
            size: t.size,
            block: "",
            disabled: t.disabled,
            onFocus: de(ae, ["prevent", "stop"]),
            onBlur: de(le, ["prevent", "stop"]),
            onClick: de(ae, ["prevent", "stop"]),
            onChange: s[0] || (s[0] = (i) => c("change", i)),
            onKeydown: Ve
          }), {
            "right-icon": O(() => [
              B("button", {
                tabindex: "-1",
                type: "button",
                class: "m-select-input__toggle-button maz-custom",
                "aria-label": `${$.value ? "collapse" : "expand"} list of options`,
                onClick: de(Se, ["stop"])
              }, [
                M(b(N), { class: "m-select-chevron maz-text-xl" })
              ], 8, jt)
            ]),
            _: 1
            /* STABLE */
          }, 16, ["id", "required", "border-active", "color", "model-value", "size", "disabled"]),
          M(lt, { name: oe.value }, {
            default: O(() => [
              $.value ? (r(), y(
                "div",
                {
                  key: 0,
                  ref_key: "optionsListElement",
                  ref: q,
                  class: V(["m-select-list", {
                    "--top": t.listPosition.includes("top"),
                    "--left": t.listPosition.includes("left"),
                    "--right": t.listPosition.includes("right"),
                    "--bottom": t.listPosition.includes("bottom")
                  }]),
                  style: ie({
                    maxHeight: `${t.maxListHeight}px`,
                    maxWidth: `${t.maxListWidth}px`
                  })
                },
                [
                  t.search ? (r(), I(Te, {
                    key: 0,
                    ref_key: "searchInputComponent",
                    ref: D,
                    modelValue: a.value,
                    "onUpdate:modelValue": [
                      s[1] || (s[1] = (i) => a.value = i),
                      s[2] || (s[2] = (i) => k.value = 0)
                    ],
                    size: "sm",
                    color: t.color,
                    placeholder: t.searchPlaceholder,
                    name: "search",
                    autocomplete: "off",
                    tabindex: "-1",
                    class: "m-select-list__search-input maz-flex-none",
                    "left-icon": b(C),
                    onKeydown: ue
                  }, null, 8, ["modelValue", "color", "placeholder", "left-icon"])) : d("v-if", !0),
                  d(`
          @slot No results slot - Displayed when no results corresponding with search query
        `),
                  !R.value || R.value.length <= 0 ? S(t.$slots, "no-results", { key: 1 }, () => [
                    B("span", Dt, [
                      M(b(Q), { class: "maz-h-6 maz-w-6 maz-text-normal" })
                    ])
                  ], !0) : (r(), y("div", Ft, [
                    (r(!0), y(
                      ve,
                      null,
                      ke(R.value, (i, w) => (r(), y(
                        ve,
                        { key: w },
                        [
                          d(`
              @slot Custom optgroup label
                @binding {String} label - the label of the optgroup
            `),
                          i.label && i.isOptGroup ? S(t.$slots, "optgroup", {
                            key: 0,
                            label: i.label
                          }, () => [
                            B(
                              "span",
                              Ht,
                              Y(i.label),
                              1
                              /* TEXT */
                            )
                          ], !0) : (r(), y("button", {
                            key: 1,
                            tabindex: "-1",
                            type: "button",
                            class: V(["m-select-list-item maz-custom maz-flex-none", [
                              {
                                "--is-keyboard-selected": k.value === w,
                                "--is-selected": ne(i),
                                "--is-none-value": H(i[t.optionValueKey])
                              }
                            ]]),
                            style: ie(t.itemHeight ? { height: `${t.itemHeight}px` } : void 0),
                            onClick: de((F) => T(i), ["prevent", "stop"])
                          }, [
                            t.multiple ? (r(), I(b(v), {
                              key: 0,
                              tabindex: "-1",
                              "model-value": ne(i),
                              size: "sm",
                              color: t.color
                            }, null, 8, ["model-value", "color"])) : d("v-if", !0),
                            d(`
                @slot Custom option
                  @binding {Object} option - the option object
                  @binding {Boolean} is-selected - if the option is selected
              `),
                            S(t.$slots, "default", {
                              option: i,
                              isSelected: ne(i)
                            }, () => [
                              B(
                                "span",
                                null,
                                Y(i[t.optionLabelKey]),
                                1
                                /* TEXT */
                              )
                            ], !0)
                          ], 14, Ut))
                        ],
                        64
                        /* STABLE_FRAGMENT */
                      ))),
                      128
                      /* KEYED_FRAGMENT */
                    ))
                  ]))
                ],
                6
                /* CLASS, STYLE */
              )) : d("v-if", !0)
            ]),
            _: 3
            /* FORWARDED */
          }, 8, ["name"])
        ],
        6
        /* CLASS, STYLE */
      )), [
        [b(_t), {
          exclude: (m = t.excludeSelectors) != null && m.length ? t.excludeSelectors : [],
          handler: le
        }]
      ]);
    };
  }
}), Fe = /* @__PURE__ */ ee(qt, [["__scopeId", "data-v-cc87f1d6"]]), Rt = /* @__PURE__ */ x({
  __name: "MazBtn",
  props: {
    variant: { default: "button" },
    size: { default: "md" },
    color: { default: "primary" },
    type: { default: "button" },
    rounded: { type: Boolean },
    roundedSize: { default: "lg" },
    noRounded: { type: Boolean },
    outline: { type: Boolean },
    pastel: { type: Boolean },
    block: { type: Boolean },
    noUnderline: { type: Boolean },
    loading: { type: Boolean },
    disabled: { type: Boolean },
    fab: { type: Boolean },
    icon: { type: [String, Function, Object], default: void 0 },
    leftIcon: { type: [String, Function, Object], default: void 0 },
    rightIcon: { type: [String, Function, Object], default: void 0 },
    noPadding: { type: Boolean },
    noElevation: { type: Boolean },
    contentClass: { default: void 0 }
  },
  setup(u) {
    const n = u, e = Z(() => import("./MazSpinner-DneKNmrs.mjs")), o = Z(() => import("./MazIcon-CTjWIkTp.mjs")), { href: c, to: v } = at(), C = Oe();
    Le(() => {
      n.icon && !n.fab && console.error('[maz-ui](MazBtn) the prop "icon" must be used only with "fab" props');
    });
    const N = p(() => c ? "a" : v ? "router-link" : "button"), Q = p(
      () => n.pastel ? `--${n.color}-pastel` : n.outline ? `--${n.color}-outline` : `--${n.color}`
    ), _ = p(
      () => (n.loading || n.disabled) && N.value === "button"
    ), k = p(() => _.value ? "--cursor-default" : "--cursor-pointer"), j = p(() => `--is-${n.variant}`), A = p(() => n.loading && n.variant === "button"), U = p(() => !!C["left-icon"] || n.leftIcon), z = p(() => !!C["right-icon"] || n.rightIcon), $ = p(() => U.value || z.value), L = p(() => n.fab && (n.icon || !!C.icon)), W = p(() => N.value === "button" ? n.type : void 0);
    return (h, J) => (r(), I(pe(N.value), {
      disabled: _.value || void 0,
      class: V(["m-btn", [
        `--${h.size}`,
        !h.fab && h.roundedSize && `--rounded-${h.roundedSize}`,
        Q.value,
        k.value,
        j.value,
        {
          "--block": h.block,
          "--no-underline": h.noUnderline,
          "--fab": h.fab,
          "--loading": h.loading,
          "--disabled": _.value,
          "--icon": $.value,
          "--rounded": h.rounded,
          "--no-rounded": h.noRounded,
          "--no-padding": h.noPadding,
          "--no-elevation": h.noElevation
        }
      ]]),
      type: W.value
    }, {
      default: O(() => [
        U.value ? (r(), y(
          "div",
          {
            key: 0,
            class: V(["m-btn__icon-left maz-flex maz-flex-center", { "maz-invisible": A.value }])
          },
          [
            d(`
        @slot left-icon - The icon to display on the left of the button
      `),
            S(h.$slots, "left-icon", {}, () => [
              typeof h.leftIcon == "string" ? (r(), I(b(o), {
                key: 0,
                name: h.leftIcon
              }, null, 8, ["name"])) : h.leftIcon ? (r(), I(pe(h.leftIcon), { key: 1 })) : d("v-if", !0)
            ], !0)
          ],
          2
          /* CLASS */
        )) : d("v-if", !0),
        L.value ? (r(), y(
          "div",
          {
            key: 1,
            class: V(["m-btn__icon", { "maz-invisible": A.value }])
          },
          [
            d(`
        @slot icon - The icon to display on the fab button
      `),
            S(h.$slots, "icon", {}, () => [
              typeof h.icon == "string" ? (r(), I(b(o), {
                key: 0,
                name: h.icon
              }, null, 8, ["name"])) : h.icon ? (r(), I(pe(h.icon), { key: 1 })) : d("v-if", !0)
            ], !0)
          ],
          2
          /* CLASS */
        )) : d("v-if", !0),
        h.$slots.default ? (r(), y(
          "span",
          {
            key: 2,
            class: V([{ "maz-invisible": A.value }, h.contentClass])
          },
          [
            d(`
        @slot default - The content of the button
      `),
            S(h.$slots, "default", {}, void 0, !0)
          ],
          2
          /* CLASS */
        )) : d("v-if", !0),
        z.value ? (r(), y(
          "div",
          {
            key: 3,
            class: V(["m-btn__icon-right", { "maz-invisible": A.value }])
          },
          [
            d(`
        @slot right-icon - The icon to display on the right of the button
      `),
            S(h.$slots, "right-icon", {}, () => [
              typeof h.rightIcon == "string" ? (r(), I(b(o), {
                key: 0,
                name: h.rightIcon
              }, null, 8, ["name"])) : h.rightIcon ? (r(), I(pe(h.rightIcon), { key: 1 })) : d("v-if", !0)
            ], !0)
          ],
          2
          /* CLASS */
        )) : d("v-if", !0),
        A.value ? (r(), I(b(e), {
          key: 4,
          class: "m-btn-loader",
          size: "2em",
          color: h.color
        }, null, 8, ["color"])) : d("v-if", !0)
      ]),
      _: 3
      /* FORWARDED */
    }, 8, ["disabled", "class", "type"]));
  }
}), me = /* @__PURE__ */ ee(Rt, [["__scopeId", "data-v-48f14785"]]), Qt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: me
}, Symbol.toStringTag, { value: "Module" }));
function Ee(u, n) {
  const e = nt(u, n);
  if (!e)
    throw new TypeError(`[maz-ui](injectStrict) Could not resolve ${u}`);
  return e;
}
const Wt = /* @__PURE__ */ x({
  __name: "MazTableRow",
  props: {
    noHoverable: { type: Boolean }
  },
  setup(u) {
    const { hoverable: n, backgroundEven: e, backgroundOdd: o } = Ee("maz-table");
    return (c, v) => (r(), y(
      "tr",
      {
        class: V(["m-table-row", {
          "--hoverable": b(n) && !c.noHoverable,
          "--background-odd": b(o),
          "--background-even": b(e)
        }])
      },
      [
        S(c.$slots, "default", {}, void 0, !0)
      ],
      2
      /* CLASS */
    ));
  }
}), Me = /* @__PURE__ */ ee(Wt, [["__scopeId", "data-v-f9d9120a"]]), Gt = /* @__PURE__ */ x({
  __name: "MazTableCell",
  setup(u) {
    const { size: n } = Ee("maz-table");
    return (e, o) => (r(), y(
      "td",
      {
        class: V(["m-table-cell", `--${b(n)}`])
      },
      [
        S(e.$slots, "default", {}, void 0, !0)
      ],
      2
      /* CLASS */
    ));
  }
}), ze = /* @__PURE__ */ ee(Gt, [["__scopeId", "data-v-28c38d00"]]), Yt = /* @__PURE__ */ x({
  __name: "MazTableTitle",
  setup(u) {
    const { size: n } = Ee("maz-table");
    return (e, o) => (r(), y(
      "th",
      {
        class: V(["m-table-title", `--${b(n)}`])
      },
      [
        S(e.$slots, "default", {}, void 0, !0)
      ],
      2
      /* CLASS */
    ));
  }
}), _e = /* @__PURE__ */ ee(Yt, [["__scopeId", "data-v-cd769807"]]), Zt = (u) => (Ue("data-v-be315052"), u = u(), qe(), u), Jt = { class: "m-loading-bar" }, Xt = /* @__PURE__ */ Zt(() => /* @__PURE__ */ B(
  "div",
  null,
  null,
  -1
  /* HOISTED */
)), xt = [
  Xt
], eo = /* @__PURE__ */ x({
  __name: "MazLoadingBar",
  props: {
    color: { default: "primary" },
    height: { default: "0.125rem" }
  },
  setup(u) {
    we((o) => ({
      "6349f7b6": o.height,
      "02343323": e.value.alpha,
      c6029158: e.value.main
    }));
    const n = u, e = p(() => ({
      alpha: `var(--maz-color-${n.color}-alpha-20)`,
      main: `var(--maz-color-${n.color})`
    }));
    return (o, c) => (r(), y("div", Jt, xt));
  }
}), to = /* @__PURE__ */ ee(eo, [["__scopeId", "data-v-be315052"]]), oo = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "none",
  viewBox: "0 0 24 24"
}, lo = /* @__PURE__ */ B(
  "path",
  {
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "1.5",
    d: "m4.5 12.75 6 6 9-13.5"
  },
  null,
  -1
  /* HOISTED */
), ao = [
  lo
];
function Ze(u, n) {
  return r(), y("svg", oo, [...ao]);
}
const Je = { render: Ze }, no = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Je,
  render: Ze
}, Symbol.toStringTag, { value: "Module" })), so = ["for", "aria-checked"], ro = ["id", "checked", "disabled", "name"], io = /* @__PURE__ */ x({
  inheritAttrs: !1,
  __name: "MazCheckbox",
  props: {
    style: { default: void 0 },
    class: { default: void 0 },
    modelValue: { type: [Boolean, Array], default: void 0 },
    id: { default: void 0 },
    color: { default: "primary" },
    value: { type: [String, Number, Boolean], default: void 0 },
    name: { default: "m-checkbox" },
    size: { default: "md" },
    label: { default: void 0 },
    disabled: { type: Boolean, default: !1 }
  },
  emits: [
    /* emitted when value change */
    "update:model-value",
    /* emited when value change */
    "change"
  ],
  setup(u, { emit: n }) {
    we((z) => ({
      "30ad0e00": Q.value,
      "46bd1cbc": C.value,
      "7c7c6907": _.value,
      "47a52c6c": k.value
    }));
    const e = u, o = n, c = Ne({
      componentName: "MazCheckbox",
      providedId: e.id
    }), v = p(
      () => typeof e.value != "boolean" && Array.isArray(e.modelValue) ? e.modelValue.includes(e.value) : typeof e.modelValue == "boolean" ? e.modelValue : !1
    ), C = p(() => {
      switch (e.size) {
        case "xl":
          return "2.25rem";
        case "lg":
          return "2rem";
        case "sm":
          return "1.425rem";
        case "xs":
          return "1.325rem";
        case "mini":
          return "1.2rem";
        default:
          return "1.625rem";
      }
    }), N = p(() => {
      switch (e.size) {
        case "xl":
          return "maz-text-2xl";
        case "lg":
          return "maz-text-xl";
        case "sm":
          return "maz-text-base";
        case "xs":
          return "maz-text-sm";
        case "mini":
          return "maz-text-xs";
        default:
          return "maz-text-lg";
      }
    }), Q = p(() => `var(--maz-color-${e.color}-contrast)`), _ = p(() => `var(--maz-color-${e.color})`), k = p(
      () => ["black", "transparent"].includes(e.color) ? "var(--maz-color-muted)" : `var(--maz-color-${e.color}-alpha)`
    );
    function j(z) {
      ["Space"].includes(z.code) && (z.preventDefault(), U(e.value ?? !e.modelValue));
    }
    function A(z) {
      return typeof z == "boolean" && (typeof e.modelValue == "boolean" || e.modelValue === void 0 || e.modelValue === null) ? !e.modelValue : Array.isArray(e.modelValue) && typeof z != "boolean" ? e.modelValue.includes(z) ? e.modelValue.filter(($) => $ !== z) : [...e.modelValue, z] : [z];
    }
    function U(z) {
      const $ = A(z);
      o("update:model-value", $), o("change", $);
    }
    return (z, $) => (r(), y("label", {
      for: b(c),
      class: V(["m-checkbox", [{ "--disabled": z.disabled }, e.class]]),
      tabindex: "0",
      style: ie(z.style),
      role: "checkbox",
      "aria-checked": v.value,
      onKeydown: j
    }, [
      B("input", Pe({
        id: b(c),
        checked: v.value
      }, z.$attrs, {
        tabindex: "-1",
        disabled: z.disabled,
        name: z.name,
        type: "checkbox",
        onChange: $[0] || ($[0] = (L) => {
          var W;
          return U(z.value ?? ((W = L == null ? void 0 : L.target) == null ? void 0 : W.checked));
        })
      }), null, 16, ro),
      B("span", null, [
        M(b(Je), {
          class: V(["check-icon", N.value])
        }, null, 8, ["class"])
      ]),
      S(z.$slots, "default", {}, () => [
        re(
          Y(z.label),
          1
          /* TEXT */
        )
      ], !0)
    ], 46, so));
  }
}), Ke = /* @__PURE__ */ ee(io, [["__scopeId", "data-v-85c875a9"]]), uo = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Ke
}, Symbol.toStringTag, { value: "Module" })), Xe = (u) => (Ue("data-v-6b3a886f"), u = u(), qe(), u), co = {
  key: 0,
  class: "m-table-header"
}, po = { class: "m-table-spacer" }, fo = { class: "m-table-header-title" }, mo = {
  key: 0,
  class: "m-table-header-search"
}, vo = { key: 0 }, bo = { key: 1 }, ho = {
  key: 0,
  class: "m-table-sort-icon-wrapper"
}, yo = { class: "maz-text-center maz-text-muted" }, go = {
  key: 1,
  class: "m-table-footer"
}, zo = /* @__PURE__ */ Xe(() => /* @__PURE__ */ B(
  "div",
  { class: "m-table-spacer" },
  null,
  -1
  /* HOISTED */
)), ko = {
  key: 0,
  class: "m-table-footer-pagination"
}, $o = { class: "m-table-footer-pagination-items-per-page" }, wo = /* @__PURE__ */ Xe(() => /* @__PURE__ */ B(
  "span",
  { class: "maz-hidden maz-text-sm maz-text-muted tab-s:maz-block" },
  " Item per page ",
  -1
  /* HOISTED */
)), So = {
  key: 0,
  class: "maz-whitespace-nowrap maz-text-sm"
}, Io = { class: "m-table-footer-pagination-buttons" }, Vo = /* @__PURE__ */ x({
  __name: "MazTable",
  props: {
    tableClass: { default: void 0 },
    tableStyle: { type: [Boolean, null, String, Object, Array], default: void 0 },
    modelValue: { default: void 0 },
    size: { default: "md" },
    title: { default: void 0 },
    headers: { default: void 0 },
    sortable: { type: Boolean },
    headersAlign: { default: "left" },
    rows: { default: void 0 },
    hoverable: { type: Boolean },
    search: { type: Boolean },
    noSearchInRow: { type: Boolean },
    searchPlaceholder: { default: "Search" },
    noSearchBy: { type: Boolean },
    searchByPlaceholder: { default: "Search by" },
    searchByAllLabel: { default: "All" },
    searchQuery: { default: void 0 },
    backgroundOdd: { type: Boolean },
    backgroundEven: { type: Boolean },
    elevation: { type: Boolean },
    divider: { type: Boolean },
    caption: { default: void 0 },
    captionSide: { default: "bottom" },
    pagination: { type: Boolean },
    page: { default: 1 },
    pageSize: { default: 20 },
    totalPages: { default: void 0 },
    paginationAllLabel: { default: "All" },
    noPaginateRows: { type: Boolean },
    totalItems: { default: void 0 },
    loading: { type: Boolean },
    selectable: { type: Boolean },
    selectedKey: { default: void 0 },
    tableLayout: { default: void 0 },
    color: { default: "primary" }
  },
  emits: ["update:model-value", "update:search-query", "update:page", "update:page-size"],
  setup(u, { emit: n }) {
    we((l) => ({
      c76cc88c: e.tableLayout,
      "23d9937f": e.captionSide
    }));
    const e = u, o = n, c = p(
      () => e.divider && !e.backgroundEven && !e.backgroundOdd
    ), { size: v, hoverable: C, backgroundEven: N, backgroundOdd: Q } = st(e);
    rt("maz-table", {
      size: v,
      hoverable: C,
      backgroundEven: N,
      backgroundOdd: Q
    });
    const _ = P(fe()), k = p(() => e.selectable || !!e.selectedKey), j = P(e.page);
    ge(
      () => e.page,
      (l) => {
        j.value = l;
      }
    );
    const A = p({
      get: () => j.value,
      set: (l) => {
        j.value = l, o("update:page", l);
      }
    }), U = p(() => [
      { label: e.paginationAllLabel, value: Number.POSITIVE_INFINITY },
      { label: 5, value: 5 },
      { label: 10, value: 10 },
      { label: 20, value: 20 },
      { label: 50, value: 50 },
      { label: 100, value: 100 },
      { label: 200, value: 200 }
    ]), z = P(e.pageSize);
    ge(
      () => e.pageSize,
      (l) => {
        z.value = l;
      }
    );
    const $ = p({
      get: () => z.value,
      set: (l) => {
        z.value = l, o("update:page-size", l);
      }
    }), L = p(() => {
      var l;
      return e.totalPages ?? ($.value === Number.POSITIVE_INFINITY || !((l = e.rows) != null && l.length)) ? 1 : Math.ceil(e.rows.length / $.value);
    });
    function W() {
      A.value = 1;
    }
    function h() {
      A.value = L.value;
    }
    function J() {
      A.value = A.value - 1;
    }
    function te() {
      A.value = A.value + 1;
    }
    const X = p(() => {
      if (!e.pagination || e.noPaginateRows || $.value === Number.POSITIVE_INFINITY)
        return _.value;
      const l = (j.value - 1) * $.value, g = l + $.value;
      return _.value.slice(l, g);
    });
    ge(
      () => [e.rows, e.modelValue],
      () => {
        _.value = fe();
      }
    );
    const G = P(), D = P(), q = P(ae()), H = P(), ne = p(() => [
      { label: e.searchByAllLabel, value: null },
      ...q.value.map((l) => ({
        label: l.label,
        value: l.key
      }))
    ]), se = P(e.searchQuery);
    ge(
      () => e.searchQuery,
      (l) => {
        se.value = l;
      }
    );
    const oe = p({
      get: () => se.value,
      set: (l) => {
        se.value = l, o("update:search-query", l);
      }
    });
    function a(l) {
      return [...l].sort((g, f) => {
        if (G.value === void 0 || D.value === void 0)
          return 0;
        const T = g[q.value[G.value].key], t = f[q.value[G.value].key];
        return typeof T == "string" && typeof t == "string" ? D.value === "ASC" ? T.localeCompare(t) : t.localeCompare(T) : D.value === "ASC" ? T - t : t - T;
      });
    }
    function K(l) {
      if (e.noSearchInRow || typeof oe.value != "string")
        return X.value;
      const g = oe.value.toLowerCase();
      return [...l].filter((f) => H.value ? String(f[H.value]).toLowerCase().includes(g) : Object.values(f).some((T) => typeof T == "string" || typeof T == "number" || typeof T == "boolean" ? String(T).toLowerCase().includes(g) : !1));
    }
    const E = p(() => {
      const l = K(X.value);
      return a(l);
    }), be = Oe(), R = p(() => e.search || !!e.title || !!be.title), le = p(() => e.pagination);
    function ae() {
      var l;
      return ((l = e.headers) == null ? void 0 : l.map(
        (g) => typeof g == "string" ? { label: g, align: e.headersAlign } : { align: e.headersAlign, thHeaders: g.headers, ...g }
      )) ?? [];
    }
    function fe() {
      var l;
      return ((l = e.rows) == null ? void 0 : l.map((g) => {
        var f;
        return {
          selected: (f = e.modelValue) == null ? void 0 : f.includes(e.selectedKey ? g[e.selectedKey] : g),
          ...g
        };
      })) ?? [];
    }
    function Se(l) {
      l === G.value ? D.value = D.value === void 0 ? "DESC" : D.value === "DESC" ? "ASC" : void 0 : D.value = "DESC", G.value = D.value === void 0 ? void 0 : l;
    }
    const he = p({
      get: () => E.value.every((l) => l.selected) ?? !1,
      set: Ie
    });
    function Ie(l) {
      for (const g of E.value)
        g.selected = l;
      ue();
    }
    function Ve(l, g) {
      E.value[g].selected = l, ue();
    }
    function ue(l) {
      l = l ?? ye();
      const g = l != null && l.length ? l : void 0;
      o("update:model-value", g);
    }
    function ye() {
      return E.value.filter((l) => l.selected).map((l) => e.selectedKey ? l[e.selectedKey] : l);
    }
    return Le(() => {
      const l = ye();
      l != null && l.length && ue(l);
    }), (l, g) => (r(), y(
      "div",
      {
        class: V(["m-table", { "--has-header": R.value }])
      },
      [
        R.value ? (r(), y("div", co, [
          B("div", po, [
            l.title || l.$slots.title ? S(l.$slots, "title", { key: 0 }, () => [
              B(
                "span",
                fo,
                Y(l.title),
                1
                /* TEXT */
              )
            ], !0) : d("v-if", !0)
          ]),
          l.search ? (r(), y("div", mo, [
            l.noSearchBy ? d("v-if", !0) : (r(), I(Fe, {
              key: 0,
              modelValue: H.value,
              "onUpdate:modelValue": g[0] || (g[0] = (f) => H.value = f),
              color: l.color,
              style: { width: "8rem" },
              placeholder: l.searchByPlaceholder,
              size: b(v),
              options: ne.value
            }, null, 8, ["modelValue", "color", "placeholder", "size", "options"])),
            M(Te, {
              modelValue: oe.value,
              "onUpdate:modelValue": g[1] || (g[1] = (f) => oe.value = f),
              size: b(v),
              color: l.color,
              placeholder: l.searchPlaceholder,
              "left-icon": b(Qe)
            }, null, 8, ["modelValue", "size", "color", "placeholder", "left-icon"])
          ])) : d("v-if", !0)
        ])) : d("v-if", !0),
        B(
          "table",
          {
            class: V([{ "--elevation": l.elevation, "--has-layout": l.tableLayout }, l.tableClass]),
            style: ie(l.tableStyle)
          },
          [
            l.caption || l.$slots.caption ? (r(), y("caption", vo, [
              d(`
          @slot caption - add caption on top or bottom of the table
        `),
              S(l.$slots, "caption", {}, () => [
                re(
                  Y(l.caption),
                  1
                  /* TEXT */
                )
              ], !0)
            ])) : d("v-if", !0),
            q.value ? (r(), y("thead", bo, [
              d(`
          @slot thead - content in thead element
        `),
              S(l.$slots, "thead", {}, () => [
                M(Me, { "no-hoverable": "" }, {
                  default: O(() => [
                    k.value ? (r(), I(_e, {
                      key: 0,
                      align: "left",
                      class: V([`--${b(v)}`, "m-table-select-column"])
                    }, {
                      default: O(() => [
                        M(Ke, {
                          modelValue: he.value,
                          "onUpdate:modelValue": g[2] || (g[2] = (f) => he.value = f),
                          size: "xs"
                        }, null, 8, ["modelValue"])
                      ]),
                      _: 1
                      /* STABLE */
                    }, 8, ["class"])) : d("v-if", !0),
                    (r(!0), y(
                      ve,
                      null,
                      ke(q.value, (f, T) => (r(), I(_e, {
                        key: T,
                        scope: f.scope,
                        align: f.align,
                        rowspan: f.rowspan,
                        colspan: f.colspan,
                        headers: f.thHeaders,
                        style: ie({ width: f.width, textAlign: f.align }),
                        class: V(["maz-group", [
                          { "--hidden": f.hidden, "--sortable": f.sortable ?? l.sortable },
                          f.classes,
                          `--${b(v)}`
                        ]]),
                        onClick: (t) => (f.sortable ?? l.sortable) && Se(T)
                      }, {
                        default: O(() => [
                          B(
                            "span",
                            {
                              class: V({ "maz-sr-only": f.srOnly })
                            },
                            [
                              d(`
                @slot header - replace column header
                  @binding {Object} header - header data
                  @binding {String} label - header label
              `),
                              S(l.$slots, "header", {
                                header: f,
                                label: f.label
                              }, () => [
                                d(`
                    @slot header-label-{key} - replace column header label
                      @binding {Object} header - header data
                      @binding {String} label - header label
                  `),
                                S(l.$slots, `header-label-${f.key}`, {
                                  header: f,
                                  label: f.label
                                }, () => [
                                  re(
                                    Y(f.label),
                                    1
                                    /* TEXT */
                                  )
                                ], !0),
                                f.sortable ?? l.sortable ? (r(), y("div", ho, [
                                  M(b(bt), {
                                    class: V(["m-table-sort-icon maz-hidden group-hover:maz-block", {
                                      "--sorted": T === G.value,
                                      "--up": D.value === "DESC",
                                      "--down": D.value === "ASC"
                                    }])
                                  }, null, 8, ["class"])
                                ])) : d("v-if", !0)
                              ], !0)
                            ],
                            2
                            /* CLASS */
                          )
                        ]),
                        _: 2
                        /* DYNAMIC */
                      }, 1032, ["scope", "align", "rowspan", "colspan", "headers", "style", "class", "onClick"]))),
                      128
                      /* KEYED_FRAGMENT */
                    )),
                    l.$slots.actions ? (r(), I(_e, {
                      key: 1,
                      align: "left",
                      class: V(`--${b(v)}`)
                    }, {
                      default: O(() => [
                        d(`
                @slot actions-header - replace text of actions header
              `),
                        S(l.$slots, "actions-header", {}, () => [
                          re(" Actions ")
                        ], !0)
                      ]),
                      _: 3
                      /* FORWARDED */
                    }, 8, ["class"])) : d("v-if", !0)
                  ]),
                  _: 3
                  /* FORWARDED */
                })
              ], !0)
            ])) : d("v-if", !0),
            l.loading ? (r(), I(to, {
              key: 2,
              color: l.color,
              class: "!maz-absolute"
            }, null, 8, ["color"])) : d("v-if", !0),
            B(
              "tbody",
              {
                class: V({ "--divider": c.value })
              },
              [
                S(l.$slots, "default", {}, () => [
                  E.value.length > 0 ? (r(!0), y(
                    ve,
                    { key: 0 },
                    ke(E.value, (f, T) => (r(), I(Me, {
                      key: T,
                      class: V(f.classes),
                      onClick: (t) => f.action && f.action(f)
                    }, {
                      default: O(() => [
                        k.value ? (r(), I(
                          ze,
                          {
                            key: 0,
                            class: "m-table-select-column"
                          },
                          {
                            default: O(() => [
                              d(`
                  @slot select - replace checkbox component
                    @binding {Object} row - row data
                    @binding {Boolean} selected - if selected or not
                `),
                              S(l.$slots, "select", {
                                row: f,
                                selected: f.selected
                              }, () => [
                                M(Ke, {
                                  size: "xs",
                                  "model-value": f.selected,
                                  "onUpdate:modelValue": (t) => Ve(t, T)
                                }, null, 8, ["model-value", "onUpdate:modelValue"])
                              ], !0)
                            ]),
                            _: 2
                            /* DYNAMIC */
                          },
                          1024
                          /* DYNAMIC_SLOTS */
                        )) : d("v-if", !0),
                        (r(!0), y(
                          ve,
                          null,
                          ke(q.value, ({ key: t, align: s, classes: m }, i) => (r(), I(ze, {
                            key: i,
                            align: s,
                            class: V(m)
                          }, {
                            default: O(() => [
                              d(`
                  @slot cell - replace all row cells
                    @binding {Object} row - row data
                    @binding {Boolean} value - cell value
                `),
                              t ? S(l.$slots, "cell", {
                                key: 0,
                                row: f,
                                value: f[t]
                              }, () => [
                                d(`
                    @slot cell-{key} - replace row cells of column
                      @binding {Object} row - row data
                      @binding {Boolean} value - cell value
                  `),
                                S(l.$slots, `cell-${t}`, {
                                  row: f,
                                  value: f[t]
                                }, () => [
                                  re(
                                    Y(f[t]),
                                    1
                                    /* TEXT */
                                  )
                                ], !0)
                              ], !0) : d("v-if", !0)
                            ]),
                            _: 2
                            /* DYNAMIC */
                          }, 1032, ["align", "class"]))),
                          128
                          /* KEYED_FRAGMENT */
                        )),
                        l.$slots.actions ? (r(), I(
                          ze,
                          { key: 1 },
                          {
                            default: O(() => [
                              d(`
                  @slot actions - will add actions column
                    @binding {Object} row - row data
                `),
                              S(l.$slots, "actions", { row: f }, void 0, !0)
                            ]),
                            _: 2
                            /* DYNAMIC */
                          },
                          1024
                          /* DYNAMIC_SLOTS */
                        )) : d("v-if", !0)
                      ]),
                      _: 2
                      /* DYNAMIC */
                    }, 1032, ["class", "onClick"]))),
                    128
                    /* KEYED_FRAGMENT */
                  )) : (r(), I(Me, { key: 1 }, {
                    default: O(() => [
                      M(ze, {
                        colspan: q.value.length + (k.value ? 1 : 0) + (l.$slots.actions ? 1 : 0)
                      }, {
                        default: O(() => [
                          d(`
                  @slot no-results - replace no results
                `),
                          S(l.$slots, "no-results", {}, () => [
                            B("p", yo, [
                              d(`
                      @slot no-results-text - replace no results test only
                    `),
                              S(l.$slots, "no-results-text", {}, () => [
                                re(" No results ")
                              ], !0)
                            ])
                          ], !0)
                        ]),
                        _: 3
                        /* FORWARDED */
                      }, 8, ["colspan"])
                    ]),
                    _: 3
                    /* FORWARDED */
                  }))
                ], !0)
              ],
              2
              /* CLASS */
            )
          ],
          6
          /* CLASS, STYLE */
        ),
        le.value ? (r(), y("div", go, [
          zo,
          l.pagination ? (r(), y("div", ko, [
            B("div", $o, [
              wo,
              M(Fe, {
                modelValue: $.value,
                "onUpdate:modelValue": g[3] || (g[3] = (f) => $.value = f),
                options: U.value,
                size: b(v),
                color: l.color,
                "list-position": "top",
                style: { width: "5rem" }
              }, null, 8, ["modelValue", "options", "size", "color"])
            ]),
            L.value ? (r(), y(
              "span",
              So,
              Y(A.value) + " - " + Y(E.value.length) + " of " + Y(L.value),
              1
              /* TEXT */
            )) : d("v-if", !0),
            B("div", Io, [
              M(me, {
                disabled: A.value === 1,
                size: b(v),
                color: "transparent",
                fab: "",
                "no-elevation": "",
                onClick: W
              }, {
                default: O(() => [
                  M(b(De), { class: "maz-text-base" })
                ]),
                _: 1
                /* STABLE */
              }, 8, ["disabled", "size"]),
              M(me, {
                disabled: A.value === 1,
                size: b(v),
                color: "transparent",
                fab: "",
                "no-elevation": "",
                onClick: J
              }, {
                default: O(() => [
                  M(b(je), { class: "maz-text-base" })
                ]),
                _: 1
                /* STABLE */
              }, 8, ["disabled", "size"]),
              M(me, {
                disabled: A.value === L.value,
                size: b(v),
                color: "transparent",
                fab: "",
                "no-elevation": "",
                onClick: te
              }, {
                default: O(() => [
                  M(b(je), { class: "maz-rotate-180 maz-text-base" })
                ]),
                _: 1
                /* STABLE */
              }, 8, ["disabled", "size"]),
              M(me, {
                disabled: A.value === L.value,
                size: b(v),
                color: "transparent",
                fab: "",
                "no-elevation": "",
                onClick: h
              }, {
                default: O(() => [
                  M(b(De), { class: "maz-rotate-180 maz-text-base" })
                ]),
                _: 1
                /* STABLE */
              }, 8, ["disabled", "size"])
            ])
          ])) : d("v-if", !0)
        ])) : d("v-if", !0)
      ],
      2
      /* CLASS */
    ));
  }
}), Co = /* @__PURE__ */ ee(Vo, [["__scopeId", "data-v-6b3a886f"]]);
export {
  Co as M,
  ee as _,
  Ee as i
};

import { defineComponent as l, mergeModels as u, useCssVars as m, useModel as f, ref as r, onMounted as v, onUnmounted as c, openBlock as p, createElementBlock as _, normalizeClass as E, createElementVNode as x, mergeProps as h, createCommentVNode as M, renderSlot as V } from "vue";
import { _ as g } from "./MazStepper-DxrzKz06.mjs";
import '../assets/MazExpandAnimation.css';const A = ["aria-hidden"], b = /* @__PURE__ */ l({
  inheritAttrs: !1,
  __name: "MazExpandAnimation",
  props: /* @__PURE__ */ u({
    duration: { default: "300ms" },
    timingFunction: { default: "ease-in-out" }
  }, {
    modelValue: { type: Boolean },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(d) {
    m((e) => ({
      "3628b947": e.duration,
      "239277b5": e.timingFunction
    }));
    const a = f(d, "modelValue"), o = r(!a.value), t = r();
    function i() {
      a.value || (o.value = !0);
    }
    function s() {
      a.value && (o.value = !1);
    }
    return v(() => {
      var e, n;
      (e = t.value) == null || e.addEventListener("transitionstart", i, !1), (n = t.value) == null || n.addEventListener("transitionend", s, !1);
    }), c(() => {
      var e, n;
      (e = t.value) == null || e.removeEventListener("transitionstart", i, !1), (n = t.value) == null || n.removeEventListener("transitionend", s, !1);
    }), (e, n) => (p(), _("div", {
      ref_key: "expandAnimationRef",
      ref: t,
      class: E(["m-expand-animation", { "m-expand-animation--expanded": a.value }]),
      "aria-hidden": !a.value,
      role: "region"
    }, [
      x(
        "div",
        h({ class: "m-expand-animation__inner" }, e.$attrs, {
          class: {
            "--overflow-hidden": o.value
          }
        }),
        [
          M(" @slot Default Slot - Display content "),
          V(e.$slots, "default", {}, void 0, !0)
        ],
        16
        /* FULL_PROPS */
      )
    ], 10, A));
  }
}), k = /* @__PURE__ */ g(b, [["__scopeId", "data-v-b7ca6b97"]]);
export {
  k as default
};
